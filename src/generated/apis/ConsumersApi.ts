/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Consumer,
  ConsumerUpdate,
  CreatedConsumer,
  ErrorMessage,
  NewConsumer,
} from '../models/index';
import {
    ConsumerFromJSON,
    ConsumerToJSON,
    ConsumerUpdateFromJSON,
    ConsumerUpdateToJSON,
    CreatedConsumerFromJSON,
    CreatedConsumerToJSON,
    ErrorMessageFromJSON,
    ErrorMessageToJSON,
    NewConsumerFromJSON,
    NewConsumerToJSON,
} from '../models/index';

export interface CreateConsumerRequest {
    customerId: string;
    newConsumer: NewConsumer;
}

export interface GetConsumerRequest {
    consumerId: string;
}

export interface GetConsumerForCustomerRequest {
    customerId: string;
}

export interface ModifyConsumerRequest {
    consumerId: string;
    consumerUpdate: ConsumerUpdate;
}

/**
 * 
 */
export class ConsumersApi extends runtime.BaseAPI {

    /**
     * Create a consumer record associated with the given customer. A consumer persists as the owner of any reports that are generated, even after the original customer is deleted from the system.  A consumer must be created for the given customer before calling any of the Generate Report services.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Create Consumer
     */
    async createConsumerRaw(requestParameters: CreateConsumerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreatedConsumer>> {
        if (requestParameters.customerId === null || requestParameters.customerId === undefined) {
            throw new runtime.RequiredError('customerId','Required parameter requestParameters.customerId was null or undefined when calling createConsumer.');
        }

        if (requestParameters.newConsumer === null || requestParameters.newConsumer === undefined) {
            throw new runtime.RequiredError('newConsumer','Required parameter requestParameters.newConsumer was null or undefined when calling createConsumer.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
        }

        const response = await this.request({
            path: `/decisioning/v1/customers/{customerId}/consumer`.replace(`{${"customerId"}}`, encodeURIComponent(String(requestParameters.customerId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: NewConsumerToJSON(requestParameters.newConsumer),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreatedConsumerFromJSON(jsonValue));
    }

    /**
     * Create a consumer record associated with the given customer. A consumer persists as the owner of any reports that are generated, even after the original customer is deleted from the system.  A consumer must be created for the given customer before calling any of the Generate Report services.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Create Consumer
     */
    async createConsumer(requestParameters: CreateConsumerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreatedConsumer> {
        const response = await this.createConsumerRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get the details of a consumer record by consumer ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Consumer by ID
     */
    async getConsumerRaw(requestParameters: GetConsumerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Consumer>> {
        if (requestParameters.consumerId === null || requestParameters.consumerId === undefined) {
            throw new runtime.RequiredError('consumerId','Required parameter requestParameters.consumerId was null or undefined when calling getConsumer.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
        }

        const response = await this.request({
            path: `/decisioning/v1/consumers/{consumerId}`.replace(`{${"consumerId"}}`, encodeURIComponent(String(requestParameters.consumerId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ConsumerFromJSON(jsonValue));
    }

    /**
     * Get the details of a consumer record by consumer ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Consumer by ID
     */
    async getConsumer(requestParameters: GetConsumerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Consumer> {
        const response = await this.getConsumerRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get the details of a consumer record by customer ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Consumer For Customer
     */
    async getConsumerForCustomerRaw(requestParameters: GetConsumerForCustomerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Consumer>> {
        if (requestParameters.customerId === null || requestParameters.customerId === undefined) {
            throw new runtime.RequiredError('customerId','Required parameter requestParameters.customerId was null or undefined when calling getConsumerForCustomer.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
        }

        const response = await this.request({
            path: `/decisioning/v1/customers/{customerId}/consumer`.replace(`{${"customerId"}}`, encodeURIComponent(String(requestParameters.customerId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ConsumerFromJSON(jsonValue));
    }

    /**
     * Get the details of a consumer record by customer ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Consumer For Customer
     */
    async getConsumerForCustomer(requestParameters: GetConsumerForCustomerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Consumer> {
        const response = await this.getConsumerForCustomerRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Modify an existing consumer. All fields are required for a consumer record, but individual fields for this call are optional because fields that are not specified will be left unchanged.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Modify Consumer by ID
     */
    async modifyConsumerRaw(requestParameters: ModifyConsumerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.consumerId === null || requestParameters.consumerId === undefined) {
            throw new runtime.RequiredError('consumerId','Required parameter requestParameters.consumerId was null or undefined when calling modifyConsumer.');
        }

        if (requestParameters.consumerUpdate === null || requestParameters.consumerUpdate === undefined) {
            throw new runtime.RequiredError('consumerUpdate','Required parameter requestParameters.consumerUpdate was null or undefined when calling modifyConsumer.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
        }

        const response = await this.request({
            path: `/decisioning/v1/consumers/{consumerId}`.replace(`{${"consumerId"}}`, encodeURIComponent(String(requestParameters.consumerId))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: ConsumerUpdateToJSON(requestParameters.consumerUpdate),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Modify an existing consumer. All fields are required for a consumer record, but individual fields for this call are optional because fields that are not specified will be left unchanged.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Modify Consumer by ID
     */
    async modifyConsumer(requestParameters: ModifyConsumerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.modifyConsumerRaw(requestParameters, initOverrides);
    }

}
