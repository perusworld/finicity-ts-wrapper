/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Asset,
  ErrorMessage,
  PayStatement,
} from '../models/index';
import {
    AssetFromJSON,
    AssetToJSON,
    ErrorMessageFromJSON,
    ErrorMessageToJSON,
    PayStatementFromJSON,
    PayStatementToJSON,
} from '../models/index';

export interface StoreCustomerPayStatementRequest {
    customerId: string;
    payStatement: PayStatement;
}

/**
 * 
 */
export class PayStatementsApi extends runtime.BaseAPI {

    /**
     * Upload pay statements for a customer.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Store Customer Pay Statement
     */
    async storeCustomerPayStatementRaw(requestParameters: StoreCustomerPayStatementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Asset>> {
        if (requestParameters.customerId === null || requestParameters.customerId === undefined) {
            throw new runtime.RequiredError('customerId','Required parameter requestParameters.customerId was null or undefined when calling storeCustomerPayStatement.');
        }

        if (requestParameters.payStatement === null || requestParameters.payStatement === undefined) {
            throw new runtime.RequiredError('payStatement','Required parameter requestParameters.payStatement was null or undefined when calling storeCustomerPayStatement.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
        }

        const response = await this.request({
            path: `/aggregation/v1/customers/{customerId}/payStatements`.replace(`{${"customerId"}}`, encodeURIComponent(String(requestParameters.customerId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PayStatementToJSON(requestParameters.payStatement),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AssetFromJSON(jsonValue));
    }

    /**
     * Upload pay statements for a customer.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Store Customer Pay Statement
     */
    async storeCustomerPayStatement(requestParameters: StoreCustomerPayStatementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Asset> {
        const response = await this.storeCustomerPayStatementRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
