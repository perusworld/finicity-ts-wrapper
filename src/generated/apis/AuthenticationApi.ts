/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AccessToken,
  ErrorMessage,
  PartnerCredentials,
  PartnerCredentialsWithNewSecret,
} from '../models/index';
import {
    AccessTokenFromJSON,
    AccessTokenToJSON,
    ErrorMessageFromJSON,
    ErrorMessageToJSON,
    PartnerCredentialsFromJSON,
    PartnerCredentialsToJSON,
    PartnerCredentialsWithNewSecretFromJSON,
    PartnerCredentialsWithNewSecretToJSON,
} from '../models/index';

export interface CreateTokenRequest {
    partnerCredentials: PartnerCredentials;
}

export interface ModifyPartnerSecretRequest {
    partnerCredentialsWithNewSecret: PartnerCredentialsWithNewSecret;
}

/**
 * 
 */
export class AuthenticationApi extends runtime.BaseAPI {

    /**
     * Send Partner ID and Partner Secret to the Partner Authentication service to obtain a token for accessing Finicity APIs. * The token is valid for two hours and is required on all calls to the Finicity APIs * As a best practice, use a single token for all calls. Assign a timestamp for each token, and then check the current timestamp before making any calls. If the token is greater than 90 minutes, generate a new one. * âš ï¸ After five failed attempts to authenticate, your account will be locked. Contact [support@finicity.com](mailto:support@finicity.com) to get help resetting your account.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Create Access Token
     */
    async createTokenRaw(requestParameters: CreateTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccessToken>> {
        if (requestParameters.partnerCredentials === null || requestParameters.partnerCredentials === undefined) {
            throw new runtime.RequiredError('partnerCredentials','Required parameter requestParameters.partnerCredentials was null or undefined when calling createToken.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
        }

        const response = await this.request({
            path: `/aggregation/v2/partners/authentication`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PartnerCredentialsToJSON(requestParameters.partnerCredentials),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AccessTokenFromJSON(jsonValue));
    }

    /**
     * Send Partner ID and Partner Secret to the Partner Authentication service to obtain a token for accessing Finicity APIs. * The token is valid for two hours and is required on all calls to the Finicity APIs * As a best practice, use a single token for all calls. Assign a timestamp for each token, and then check the current timestamp before making any calls. If the token is greater than 90 minutes, generate a new one. * âš ï¸ After five failed attempts to authenticate, your account will be locked. Contact [support@finicity.com](mailto:support@finicity.com) to get help resetting your account.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Create Access Token
     */
    async createToken(requestParameters: CreateTokenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccessToken> {
        const response = await this.createTokenRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Change the Partner Secret used to authenticate this partner.  The secret does not expire, but can be changed by calling this API. A valid Partner Secret may contain upper and lowercase characters, numbers, and the characters !, @, #, $, %, &, *, _, -, +. It must include at least one number and at least one letter, and its length should be between 12 and 255 characters.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Modify Partner Secret
     */
    async modifyPartnerSecretRaw(requestParameters: ModifyPartnerSecretRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.partnerCredentialsWithNewSecret === null || requestParameters.partnerCredentialsWithNewSecret === undefined) {
            throw new runtime.RequiredError('partnerCredentialsWithNewSecret','Required parameter requestParameters.partnerCredentialsWithNewSecret was null or undefined when calling modifyPartnerSecret.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
        }

        const response = await this.request({
            path: `/aggregation/v2/partners/authentication`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: PartnerCredentialsWithNewSecretToJSON(requestParameters.partnerCredentialsWithNewSecret),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Change the Partner Secret used to authenticate this partner.  The secret does not expire, but can be changed by calling this API. A valid Partner Secret may contain upper and lowercase characters, numbers, and the characters !, @, #, $, %, &, *, _, -, +. It must include at least one number and at least one letter, and its length should be between 12 and 255 characters.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Modify Partner Secret
     */
    async modifyPartnerSecret(requestParameters: ModifyPartnerSecretRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.modifyPartnerSecretRaw(requestParameters, initOverrides);
    }

}
