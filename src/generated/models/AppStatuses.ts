/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AppStatus } from './AppStatus';
import {
    AppStatusFromJSON,
    AppStatusFromJSONTyped,
    AppStatusToJSON,
} from './AppStatus';

/**
 * The response for the Get App Registration Status API which returns an array of status objects
 * @export
 * @interface AppStatuses
 */
export interface AppStatuses {
    /**
     * The total number of results
     * @type {number}
     * @memberof AppStatuses
     */
    totalRecords: number;
    /**
     * The total number of pages
     * @type {number}
     * @memberof AppStatuses
     */
    totalPages: number;
    /**
     * The current page number
     * @type {number}
     * @memberof AppStatuses
     */
    pageNumber: number;
    /**
     * The number of results per page
     * @type {number}
     * @memberof AppStatuses
     */
    numberOfRecordsPerPage: number;
    /**
     * A list of applications with their statuses
     * @type {Array<AppStatus>}
     * @memberof AppStatuses
     */
    applications: Array<AppStatus>;
}

/**
 * Check if a given object implements the AppStatuses interface.
 */
export function instanceOfAppStatuses(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "totalRecords" in value;
    isInstance = isInstance && "totalPages" in value;
    isInstance = isInstance && "pageNumber" in value;
    isInstance = isInstance && "numberOfRecordsPerPage" in value;
    isInstance = isInstance && "applications" in value;

    return isInstance;
}

export function AppStatusesFromJSON(json: any): AppStatuses {
    return AppStatusesFromJSONTyped(json, false);
}

export function AppStatusesFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppStatuses {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalRecords': json['totalRecords'],
        'totalPages': json['totalPages'],
        'pageNumber': json['pageNumber'],
        'numberOfRecordsPerPage': json['numberOfRecordsPerPage'],
        'applications': ((json['applications'] as Array<any>).map(AppStatusFromJSON)),
    };
}

export function AppStatusesToJSON(value?: AppStatuses | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'totalRecords': value.totalRecords,
        'totalPages': value.totalPages,
        'pageNumber': value.pageNumber,
        'numberOfRecordsPerPage': value.numberOfRecordsPerPage,
        'applications': ((value.applications as Array<any>).map(AppStatusToJSON)),
    };
}

