/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Current estimated monthly pay for the employment.
 * 
 * This is a mandatory field only for VOIE-payroll report type.
 * @export
 * @interface MonthlyIncome
 */
export interface MonthlyIncome {
    /**
     * Mastercard Open Banking estimated monthly base pay amount for the employment
     * @type {number}
     * @memberof MonthlyIncome
     */
    estimatedMonthlyBasePay?: number;
    /**
     * Mastercard Open Banking estimated monthly overtime pay amount for the employment
     * @type {number}
     * @memberof MonthlyIncome
     */
    estimatedMonthlyOvertimePay?: number;
    /**
     * Mastercard Open Banking estimated monthly bonus pay amount for the employment
     * @type {number}
     * @memberof MonthlyIncome
     */
    estimatedMonthlyBonusPay?: number;
    /**
     * Mastercard Open Banking estimated monthly other pay amount for the employment
     * @type {number}
     * @memberof MonthlyIncome
     */
    estimatedMonthlyOtherPay?: number;
    /**
     * Sum of all Mastercard Open Banking estimated monthly pay amounts
     * @type {number}
     * @memberof MonthlyIncome
     */
    estimatedMonthlyTotalPay: number;
    /**
     * Mastercard Open Banking estimated monthly commission pay amount for the employment
     * @type {number}
     * @memberof MonthlyIncome
     */
    estimatedMonthlyCommissionPay?: number;
}

/**
 * Check if a given object implements the MonthlyIncome interface.
 */
export function instanceOfMonthlyIncome(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "estimatedMonthlyTotalPay" in value;

    return isInstance;
}

export function MonthlyIncomeFromJSON(json: any): MonthlyIncome {
    return MonthlyIncomeFromJSONTyped(json, false);
}

export function MonthlyIncomeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MonthlyIncome {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'estimatedMonthlyBasePay': !exists(json, 'estimatedMonthlyBasePay') ? undefined : json['estimatedMonthlyBasePay'],
        'estimatedMonthlyOvertimePay': !exists(json, 'estimatedMonthlyOvertimePay') ? undefined : json['estimatedMonthlyOvertimePay'],
        'estimatedMonthlyBonusPay': !exists(json, 'estimatedMonthlyBonusPay') ? undefined : json['estimatedMonthlyBonusPay'],
        'estimatedMonthlyOtherPay': !exists(json, 'estimatedMonthlyOtherPay') ? undefined : json['estimatedMonthlyOtherPay'],
        'estimatedMonthlyTotalPay': json['estimatedMonthlyTotalPay'],
        'estimatedMonthlyCommissionPay': !exists(json, 'estimatedMonthlyCommissionPay') ? undefined : json['estimatedMonthlyCommissionPay'],
    };
}

export function MonthlyIncomeToJSON(value?: MonthlyIncome | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'estimatedMonthlyBasePay': value.estimatedMonthlyBasePay,
        'estimatedMonthlyOvertimePay': value.estimatedMonthlyOvertimePay,
        'estimatedMonthlyBonusPay': value.estimatedMonthlyBonusPay,
        'estimatedMonthlyOtherPay': value.estimatedMonthlyOtherPay,
        'estimatedMonthlyTotalPay': value.estimatedMonthlyTotalPay,
        'estimatedMonthlyCommissionPay': value.estimatedMonthlyCommissionPay,
    };
}

