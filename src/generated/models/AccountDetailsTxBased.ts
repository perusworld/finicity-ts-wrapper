/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AccountDetailsTxBased
 */
export interface AccountDetailsTxBased {
    /**
     * Only available for investment accounts. Net interest earned after deducting interest paid out.
     * @type {number}
     * @memberof AccountDetailsTxBased
     */
    interestMarginBalance?: number;
    /**
     * Only available for investment accounts. Amount available for cash withdrawal.
     * @type {number}
     * @memberof AccountDetailsTxBased
     */
    availableCashBalance?: number;
    /**
     * Only available for investment accounts. Vested amount in account.
     * @type {number}
     * @memberof AccountDetailsTxBased
     */
    vestedBalance?: number;
    /**
     * Only available for investment accounts. Current loan balance.
     * @type {number}
     * @memberof AccountDetailsTxBased
     */
    currentLoanBalance?: number;
    /**
     * The available balance for the account
     * @type {number}
     * @memberof AccountDetailsTxBased
     */
    availableBalanceAmount?: number;
    /**
     * Net interest earned after deducting interest paid out
     * @type {number}
     * @memberof AccountDetailsTxBased
     */
    marginBalance?: number;
    /**
     * Current balance
     * @type {number}
     * @memberof AccountDetailsTxBased
     */
    currentBalance?: number;
}

/**
 * Check if a given object implements the AccountDetailsTxBased interface.
 */
export function instanceOfAccountDetailsTxBased(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AccountDetailsTxBasedFromJSON(json: any): AccountDetailsTxBased {
    return AccountDetailsTxBasedFromJSONTyped(json, false);
}

export function AccountDetailsTxBasedFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountDetailsTxBased {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'interestMarginBalance': !exists(json, 'interestMarginBalance') ? undefined : json['interestMarginBalance'],
        'availableCashBalance': !exists(json, 'availableCashBalance') ? undefined : json['availableCashBalance'],
        'vestedBalance': !exists(json, 'vestedBalance') ? undefined : json['vestedBalance'],
        'currentLoanBalance': !exists(json, 'currentLoanBalance') ? undefined : json['currentLoanBalance'],
        'availableBalanceAmount': !exists(json, 'availableBalanceAmount') ? undefined : json['availableBalanceAmount'],
        'marginBalance': !exists(json, 'marginBalance') ? undefined : json['marginBalance'],
        'currentBalance': !exists(json, 'currentBalance') ? undefined : json['currentBalance'],
    };
}

export function AccountDetailsTxBasedToJSON(value?: AccountDetailsTxBased | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'interestMarginBalance': value.interestMarginBalance,
        'availableCashBalance': value.availableCashBalance,
        'vestedBalance': value.vestedBalance,
        'currentLoanBalance': value.currentLoanBalance,
        'availableBalanceAmount': value.availableBalanceAmount,
        'marginBalance': value.marginBalance,
        'currentBalance': value.currentBalance,
    };
}

