/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PaymentHistoryAccountSummary } from './PaymentHistoryAccountSummary';
import {
    PaymentHistoryAccountSummaryFromJSON,
    PaymentHistoryAccountSummaryFromJSONTyped,
    PaymentHistoryAccountSummaryToJSON,
} from './PaymentHistoryAccountSummary';
import type { PaymentHistoryCustomerMonthlySummary } from './PaymentHistoryCustomerMonthlySummary';
import {
    PaymentHistoryCustomerMonthlySummaryFromJSON,
    PaymentHistoryCustomerMonthlySummaryFromJSONTyped,
    PaymentHistoryCustomerMonthlySummaryToJSON,
} from './PaymentHistoryCustomerMonthlySummary';
import type { PaymentHistoryTransactionsSummary } from './PaymentHistoryTransactionsSummary';
import {
    PaymentHistoryTransactionsSummaryFromJSON,
    PaymentHistoryTransactionsSummaryFromJSONTyped,
    PaymentHistoryTransactionsSummaryToJSON,
} from './PaymentHistoryTransactionsSummary';

/**
 * Payment History computed analytics
 * @export
 * @interface PaymentHistoryAnalytics
 */
export interface PaymentHistoryAnalytics {
    /**
     * Report status
     * @type {string}
     * @memberof PaymentHistoryAnalytics
     */
    status?: string;
    /**
     * Calculated risk score
     * @type {number}
     * @memberof PaymentHistoryAnalytics
     */
    riskScore?: number;
    /**
     * Months of transactions
     * @type {number}
     * @memberof PaymentHistoryAnalytics
     */
    transactionHistory?: number;
    /**
     * 
     * @type {PaymentHistoryTransactionsSummary}
     * @memberof PaymentHistoryAnalytics
     */
    transactionsSummary?: PaymentHistoryTransactionsSummary;
    /**
     * Account-level summary of transactions
     * @type {Array<PaymentHistoryAccountSummary>}
     * @memberof PaymentHistoryAnalytics
     */
    accountSummaries?: Array<PaymentHistoryAccountSummary>;
    /**
     * Customer-level summary of transactions per month
     * @type {Array<PaymentHistoryCustomerMonthlySummary>}
     * @memberof PaymentHistoryAnalytics
     */
    customerSummaryByMonths?: Array<PaymentHistoryCustomerMonthlySummary>;
}

/**
 * Check if a given object implements the PaymentHistoryAnalytics interface.
 */
export function instanceOfPaymentHistoryAnalytics(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PaymentHistoryAnalyticsFromJSON(json: any): PaymentHistoryAnalytics {
    return PaymentHistoryAnalyticsFromJSONTyped(json, false);
}

export function PaymentHistoryAnalyticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaymentHistoryAnalytics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : json['status'],
        'riskScore': !exists(json, 'riskScore') ? undefined : json['riskScore'],
        'transactionHistory': !exists(json, 'transactionHistory') ? undefined : json['transactionHistory'],
        'transactionsSummary': !exists(json, 'transactionsSummary') ? undefined : PaymentHistoryTransactionsSummaryFromJSON(json['transactionsSummary']),
        'accountSummaries': !exists(json, 'accountSummaries') ? undefined : ((json['accountSummaries'] as Array<any>).map(PaymentHistoryAccountSummaryFromJSON)),
        'customerSummaryByMonths': !exists(json, 'customerSummaryByMonths') ? undefined : ((json['customerSummaryByMonths'] as Array<any>).map(PaymentHistoryCustomerMonthlySummaryFromJSON)),
    };
}

export function PaymentHistoryAnalyticsToJSON(value?: PaymentHistoryAnalytics | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'riskScore': value.riskScore,
        'transactionHistory': value.transactionHistory,
        'transactionsSummary': PaymentHistoryTransactionsSummaryToJSON(value.transactionsSummary),
        'accountSummaries': value.accountSummaries === undefined ? undefined : ((value.accountSummaries as Array<any>).map(PaymentHistoryAccountSummaryToJSON)),
        'customerSummaryByMonths': value.customerSummaryByMonths === undefined ? undefined : ((value.customerSummaryByMonths as Array<any>).map(PaymentHistoryCustomerMonthlySummaryToJSON)),
    };
}

