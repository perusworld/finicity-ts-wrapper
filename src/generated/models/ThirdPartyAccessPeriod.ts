/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Object which describes access validity
 * @export
 * @interface ThirdPartyAccessPeriod
 */
export interface ThirdPartyAccessPeriod {
    /**
     * Multiple types will be supported. Presently below types are supported.
     * * "timeframe": Specifies a timeframe bounded by a startTime and endTime.  
     *   The startTime is the time at which the access was granted and the
     * access key generated, 
     *   and the endTime is the time at which the access was revoked. Times
     * are represented in ISO 8601 format("2022-03-10T06:06:20Z")
     * @type {string}
     * @memberof ThirdPartyAccessPeriod
     */
    type: string;
    /**
     * A date-time with time zone
     * @type {Date}
     * @memberof ThirdPartyAccessPeriod
     */
    startTime: Date;
    /**
     * A date-time with time zone
     * @type {Date}
     * @memberof ThirdPartyAccessPeriod
     */
    endTime: Date;
}

/**
 * Check if a given object implements the ThirdPartyAccessPeriod interface.
 */
export function instanceOfThirdPartyAccessPeriod(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "startTime" in value;
    isInstance = isInstance && "endTime" in value;

    return isInstance;
}

export function ThirdPartyAccessPeriodFromJSON(json: any): ThirdPartyAccessPeriod {
    return ThirdPartyAccessPeriodFromJSONTyped(json, false);
}

export function ThirdPartyAccessPeriodFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThirdPartyAccessPeriod {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'startTime': (new Date(json['startTime'])),
        'endTime': (new Date(json['endTime'])),
    };
}

export function ThirdPartyAccessPeriodToJSON(value?: ThirdPartyAccessPeriod | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'startTime': (value.startTime.toISOString()),
        'endTime': (value.endTime.toISOString()),
    };
}

