/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The address of a financial institution
 * @export
 * @interface InstitutionAddress
 */
export interface InstitutionAddress {
    /**
     * City
     * @type {string}
     * @memberof InstitutionAddress
     */
    city?: string;
    /**
     * State
     * @type {string}
     * @memberof InstitutionAddress
     */
    state?: string;
    /**
     * Country code is Iso3166-1 Alpha-2 code and Alpha 3 standard (max length 3).
     * @type {string}
     * @memberof InstitutionAddress
     */
    country?: string;
    /**
     * A ZIP code
     * @type {string}
     * @memberof InstitutionAddress
     */
    postalCode?: string;
    /**
     * Address line 1
     * @type {string}
     * @memberof InstitutionAddress
     */
    addressLine1?: string;
    /**
     * Address line 2
     * @type {string}
     * @memberof InstitutionAddress
     */
    addressLine2?: string;
}

/**
 * Check if a given object implements the InstitutionAddress interface.
 */
export function instanceOfInstitutionAddress(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InstitutionAddressFromJSON(json: any): InstitutionAddress {
    return InstitutionAddressFromJSONTyped(json, false);
}

export function InstitutionAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): InstitutionAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'city': !exists(json, 'city') ? undefined : json['city'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'country': !exists(json, 'country') ? undefined : json['country'],
        'postalCode': !exists(json, 'postalCode') ? undefined : json['postalCode'],
        'addressLine1': !exists(json, 'addressLine1') ? undefined : json['addressLine1'],
        'addressLine2': !exists(json, 'addressLine2') ? undefined : json['addressLine2'],
    };
}

export function InstitutionAddressToJSON(value?: InstitutionAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'city': value.city,
        'state': value.state,
        'country': value.country,
        'postalCode': value.postalCode,
        'addressLine1': value.addressLine1,
        'addressLine2': value.addressLine2,
    };
}

