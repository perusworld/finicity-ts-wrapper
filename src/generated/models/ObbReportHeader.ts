/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Details about the business the report is generated for and metadata about the report
 * @export
 * @interface ObbReportHeader
 */
export interface ObbReportHeader {
    /**
     * Business address line 1
     * @type {string}
     * @memberof ObbReportHeader
     */
    businessAddress?: string;
    /**
     * Business address city
     * @type {string}
     * @memberof ObbReportHeader
     */
    businessCity?: string;
    /**
     * Name of the business
     * @type {string}
     * @memberof ObbReportHeader
     */
    businessName?: string;
    /**
     * Business address state
     * @type {string}
     * @memberof ObbReportHeader
     */
    businessState?: string;
    /**
     * Business address zip
     * @type {string}
     * @memberof ObbReportHeader
     */
    businessZip?: string;
    /**
     * Partner-provided reference number
     * @type {string}
     * @memberof ObbReportHeader
     */
    referenceNumber?: string;
    /**
     * Date the report was requested
     * @type {string}
     * @memberof ObbReportHeader
     */
    reportDate: string;
    /**
     * Generated unique report ID
     * @type {string}
     * @memberof ObbReportHeader
     */
    reportId: string;
}

/**
 * Check if a given object implements the ObbReportHeader interface.
 */
export function instanceOfObbReportHeader(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "reportDate" in value;
    isInstance = isInstance && "reportId" in value;

    return isInstance;
}

export function ObbReportHeaderFromJSON(json: any): ObbReportHeader {
    return ObbReportHeaderFromJSONTyped(json, false);
}

export function ObbReportHeaderFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObbReportHeader {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'businessAddress': !exists(json, 'businessAddress') ? undefined : json['businessAddress'],
        'businessCity': !exists(json, 'businessCity') ? undefined : json['businessCity'],
        'businessName': !exists(json, 'businessName') ? undefined : json['businessName'],
        'businessState': !exists(json, 'businessState') ? undefined : json['businessState'],
        'businessZip': !exists(json, 'businessZip') ? undefined : json['businessZip'],
        'referenceNumber': !exists(json, 'referenceNumber') ? undefined : json['referenceNumber'],
        'reportDate': json['reportDate'],
        'reportId': json['reportId'],
    };
}

export function ObbReportHeaderToJSON(value?: ObbReportHeader | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'businessAddress': value.businessAddress,
        'businessCity': value.businessCity,
        'businessName': value.businessName,
        'businessState': value.businessState,
        'businessZip': value.businessZip,
        'referenceNumber': value.referenceNumber,
        'reportDate': value.reportDate,
        'reportId': value.reportId,
    };
}

