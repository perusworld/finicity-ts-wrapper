/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Deductions } from './Deductions';
import {
    DeductionsFromJSON,
    DeductionsFromJSONTyped,
    DeductionsToJSON,
} from './Deductions';
import type { DirectDeposits } from './DirectDeposits';
import {
    DirectDepositsFromJSON,
    DirectDepositsFromJSONTyped,
    DirectDepositsToJSON,
} from './DirectDeposits';
import type { Earnings } from './Earnings';
import {
    EarningsFromJSON,
    EarningsFromJSONTyped,
    EarningsToJSON,
} from './Earnings';
import type { MainPayStatementFields } from './MainPayStatementFields';
import {
    MainPayStatementFieldsFromJSON,
    MainPayStatementFieldsFromJSONTyped,
    MainPayStatementFieldsToJSON,
} from './MainPayStatementFields';

/**
 * 
 * @export
 * @interface DirectPayStatements
 */
export interface DirectPayStatements {
    /**
     * An ID for the income and employment details for the given pay period
     * @type {string}
     * @memberof DirectPayStatements
     */
    payrollPayHistoryId: string;
    /**
     * Most recent available pay check
     * @type {boolean}
     * @memberof DirectPayStatements
     */
    lastPayPeriodIndicator: boolean;
    /**
     * 
     * @type {MainPayStatementFields}
     * @memberof DirectPayStatements
     */
    mainPayStatementFields: MainPayStatementFields;
    /**
     * Categorization of pay, for the pay period
     * @type {Array<Earnings>}
     * @memberof DirectPayStatements
     */
    earnings: Array<Earnings>;
    /**
     * Deductions from the pay check
     * @type {Array<Deductions>}
     * @memberof DirectPayStatements
     */
    deductions?: Array<Deductions>;
    /**
     * Direct deposit information for the paycheck
     * @type {Array<DirectDeposits>}
     * @memberof DirectPayStatements
     */
    directDeposits?: Array<DirectDeposits>;
}

/**
 * Check if a given object implements the DirectPayStatements interface.
 */
export function instanceOfDirectPayStatements(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "payrollPayHistoryId" in value;
    isInstance = isInstance && "lastPayPeriodIndicator" in value;
    isInstance = isInstance && "mainPayStatementFields" in value;
    isInstance = isInstance && "earnings" in value;

    return isInstance;
}

export function DirectPayStatementsFromJSON(json: any): DirectPayStatements {
    return DirectPayStatementsFromJSONTyped(json, false);
}

export function DirectPayStatementsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DirectPayStatements {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'payrollPayHistoryId': json['payrollPayHistoryId'],
        'lastPayPeriodIndicator': json['lastPayPeriodIndicator'],
        'mainPayStatementFields': MainPayStatementFieldsFromJSON(json['mainPayStatementFields']),
        'earnings': ((json['earnings'] as Array<any>).map(EarningsFromJSON)),
        'deductions': !exists(json, 'deductions') ? undefined : ((json['deductions'] as Array<any>).map(DeductionsFromJSON)),
        'directDeposits': !exists(json, 'directDeposits') ? undefined : ((json['directDeposits'] as Array<any>).map(DirectDepositsFromJSON)),
    };
}

export function DirectPayStatementsToJSON(value?: DirectPayStatements | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'payrollPayHistoryId': value.payrollPayHistoryId,
        'lastPayPeriodIndicator': value.lastPayPeriodIndicator,
        'mainPayStatementFields': MainPayStatementFieldsToJSON(value.mainPayStatementFields),
        'earnings': ((value.earnings as Array<any>).map(EarningsToJSON)),
        'deductions': value.deductions === undefined ? undefined : ((value.deductions as Array<any>).map(DeductionsToJSON)),
        'directDeposits': value.directDeposits === undefined ? undefined : ((value.directDeposits as Array<any>).map(DirectDepositsToJSON)),
    };
}

