/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChildInstitution
 */
export interface ChildInstitution {
    /**
     * The RSSD ID is a unique identifier assigned to financial institutions by the Federal Reserve. While the length of the RSSD ID varies by institution, it cannot exceed 10 numerical digits.
     * @type {number}
     * @memberof ChildInstitution
     */
    rssd: number;
    /**
     * The RSSD ID is a unique identifier assigned to financial institutions by the Federal Reserve. While the length of the RSSD ID varies by institution, it cannot exceed 10 numerical digits.
     * @type {number}
     * @memberof ChildInstitution
     */
    parentRSSD: number;
    /**
     * The name of the institution
     * @type {string}
     * @memberof ChildInstitution
     */
    name: string;
    /**
     * The ID of a financial institution, represented as a number
     * @type {number}
     * @memberof ChildInstitution
     */
    institutionId: number;
}

/**
 * Check if a given object implements the ChildInstitution interface.
 */
export function instanceOfChildInstitution(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "rssd" in value;
    isInstance = isInstance && "parentRSSD" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "institutionId" in value;

    return isInstance;
}

export function ChildInstitutionFromJSON(json: any): ChildInstitution {
    return ChildInstitutionFromJSONTyped(json, false);
}

export function ChildInstitutionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChildInstitution {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rssd': json['rssd'],
        'parentRSSD': json['parentRSSD'],
        'name': json['name'],
        'institutionId': json['institutionId'],
    };
}

export function ChildInstitutionToJSON(value?: ChildInstitution | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rssd': value.rssd,
        'parentRSSD': value.parentRSSD,
        'name': value.name,
        'institutionId': value.institutionId,
    };
}

