/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccountDetails } from './AccountDetails';
import {
    AccountDetailsFromJSON,
    AccountDetailsFromJSONTyped,
    AccountDetailsToJSON,
} from './AccountDetails';
import type { PrequalificationReportAssetSummary } from './PrequalificationReportAssetSummary';
import {
    PrequalificationReportAssetSummaryFromJSON,
    PrequalificationReportAssetSummaryFromJSONTyped,
    PrequalificationReportAssetSummaryToJSON,
} from './PrequalificationReportAssetSummary';
import type { ReportTransaction } from './ReportTransaction';
import {
    ReportTransactionFromJSON,
    ReportTransactionFromJSONTyped,
    ReportTransactionToJSON,
} from './ReportTransaction';

/**
 * 
 * @export
 * @interface PrequalificationReportAccount
 */
export interface PrequalificationReportAccount {
    /**
     * The ID of the account
     * @type {number}
     * @memberof PrequalificationReportAccount
     */
    id?: number;
    /**
     * The account number from the institution (all digits except the last four are obfuscated)
     * @type {string}
     * @memberof PrequalificationReportAccount
     */
    number?: string;
    /**
     * The name of the account owner. If no owner information is available, this field won't appear in the report.
     * @type {string}
     * @memberof PrequalificationReportAccount
     */
    ownerName?: string;
    /**
     * The mailing address of the account owner. If no owner information is available, this field won't appear in the report.
     * @type {string}
     * @memberof PrequalificationReportAccount
     */
    ownerAddress?: string;
    /**
     * The account name from the institution
     * @type {string}
     * @memberof PrequalificationReportAccount
     */
    name?: string;
    /**
     * One of the values from account types
     * @type {string}
     * @memberof PrequalificationReportAccount
     */
    type?: string;
    /**
     * The status of the most recent aggregation attempt
     * @type {number}
     * @memberof PrequalificationReportAccount
     */
    aggregationStatusCode?: number;
    /**
     * The cleared balance of the account as-of `balanceDate`
     * @type {number}
     * @memberof PrequalificationReportAccount
     */
    balance?: number;
    /**
     * A timestamp of the balance
     * @type {number}
     * @memberof PrequalificationReportAccount
     */
    balanceDate?: number;
    /**
     * Available balance
     * @type {number}
     * @memberof PrequalificationReportAccount
     */
    availableBalance?: number;
    /**
     * The average monthly balance of the account
     * @type {number}
     * @memberof PrequalificationReportAccount
     */
    averageMonthlyBalance?: number;
    /**
     * The count for the total number of insufficient funds transactions, based on the `fromDate` of the report
     * @type {number}
     * @memberof PrequalificationReportAccount
     */
    totNumberInsufficientFundsFeeDebitTxAccount?: number;
    /**
     * The total number of  insufficient funds fees for the account over six months
     * @type {number}
     * @memberof PrequalificationReportAccount
     */
    totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount?: number;
    /**
     * The total number of days since the most recent insufficient funds fee for the account
     * @type {number}
     * @memberof PrequalificationReportAccount
     */
    totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount?: number;
    /**
     * a list of transaction records
     * @type {Array<ReportTransaction>}
     * @memberof PrequalificationReportAccount
     */
    transactions?: Array<ReportTransaction>;
    /**
     * 
     * @type {PrequalificationReportAssetSummary}
     * @memberof PrequalificationReportAccount
     */
    asset?: PrequalificationReportAssetSummary;
    /**
     * 
     * @type {AccountDetails}
     * @memberof PrequalificationReportAccount
     */
    details?: AccountDetails;
}

/**
 * Check if a given object implements the PrequalificationReportAccount interface.
 */
export function instanceOfPrequalificationReportAccount(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PrequalificationReportAccountFromJSON(json: any): PrequalificationReportAccount {
    return PrequalificationReportAccountFromJSONTyped(json, false);
}

export function PrequalificationReportAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrequalificationReportAccount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'ownerName': !exists(json, 'ownerName') ? undefined : json['ownerName'],
        'ownerAddress': !exists(json, 'ownerAddress') ? undefined : json['ownerAddress'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'aggregationStatusCode': !exists(json, 'aggregationStatusCode') ? undefined : json['aggregationStatusCode'],
        'balance': !exists(json, 'balance') ? undefined : json['balance'],
        'balanceDate': !exists(json, 'balanceDate') ? undefined : json['balanceDate'],
        'availableBalance': !exists(json, 'availableBalance') ? undefined : json['availableBalance'],
        'averageMonthlyBalance': !exists(json, 'averageMonthlyBalance') ? undefined : json['averageMonthlyBalance'],
        'totNumberInsufficientFundsFeeDebitTxAccount': !exists(json, 'totNumberInsufficientFundsFeeDebitTxAccount') ? undefined : json['totNumberInsufficientFundsFeeDebitTxAccount'],
        'totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount': !exists(json, 'totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount') ? undefined : json['totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount'],
        'totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount': !exists(json, 'totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount') ? undefined : json['totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount'],
        'transactions': !exists(json, 'transactions') ? undefined : ((json['transactions'] as Array<any>).map(ReportTransactionFromJSON)),
        'asset': !exists(json, 'asset') ? undefined : PrequalificationReportAssetSummaryFromJSON(json['asset']),
        'details': !exists(json, 'details') ? undefined : AccountDetailsFromJSON(json['details']),
    };
}

export function PrequalificationReportAccountToJSON(value?: PrequalificationReportAccount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'number': value.number,
        'ownerName': value.ownerName,
        'ownerAddress': value.ownerAddress,
        'name': value.name,
        'type': value.type,
        'aggregationStatusCode': value.aggregationStatusCode,
        'balance': value.balance,
        'balanceDate': value.balanceDate,
        'availableBalance': value.availableBalance,
        'averageMonthlyBalance': value.averageMonthlyBalance,
        'totNumberInsufficientFundsFeeDebitTxAccount': value.totNumberInsufficientFundsFeeDebitTxAccount,
        'totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount': value.totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount,
        'totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount': value.totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount,
        'transactions': value.transactions === undefined ? undefined : ((value.transactions as Array<any>).map(ReportTransactionToJSON)),
        'asset': PrequalificationReportAssetSummaryToJSON(value.asset),
        'details': AccountDetailsToJSON(value.details),
    };
}

