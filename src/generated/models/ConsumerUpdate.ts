/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Birthday } from './Birthday';
import {
    BirthdayFromJSON,
    BirthdayFromJSONTyped,
    BirthdayToJSON,
} from './Birthday';

/**
 * 
 * @export
 * @interface ConsumerUpdate
 */
export interface ConsumerUpdate {
    /**
     * The first name of the account holder
     * @type {string}
     * @memberof ConsumerUpdate
     */
    firstName?: string;
    /**
     * The last name of the account holder
     * @type {string}
     * @memberof ConsumerUpdate
     */
    lastName?: string;
    /**
     * A street address
     * @type {string}
     * @memberof ConsumerUpdate
     */
    address?: string;
    /**
     * City
     * @type {string}
     * @memberof ConsumerUpdate
     */
    city?: string;
    /**
     * State
     * @type {string}
     * @memberof ConsumerUpdate
     */
    state?: string;
    /**
     * A ZIP code
     * @type {string}
     * @memberof ConsumerUpdate
     */
    zip?: string;
    /**
     * A phone number (max length 15).
     * @type {string}
     * @memberof ConsumerUpdate
     */
    phone?: string;
    /**
     * A full SSN with or without hyphens
     * @type {string}
     * @memberof ConsumerUpdate
     */
    ssn?: string;
    /**
     * 
     * @type {Birthday}
     * @memberof ConsumerUpdate
     */
    birthday?: Birthday;
    /**
     * An email address
     * @type {string}
     * @memberof ConsumerUpdate
     */
    email?: string;
    /**
     * A generational or academic suffix
     * @type {string}
     * @memberof ConsumerUpdate
     */
    suffix?: string;
}

/**
 * Check if a given object implements the ConsumerUpdate interface.
 */
export function instanceOfConsumerUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConsumerUpdateFromJSON(json: any): ConsumerUpdate {
    return ConsumerUpdateFromJSONTyped(json, false);
}

export function ConsumerUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConsumerUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'lastName': !exists(json, 'lastName') ? undefined : json['lastName'],
        'address': !exists(json, 'address') ? undefined : json['address'],
        'city': !exists(json, 'city') ? undefined : json['city'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'zip': !exists(json, 'zip') ? undefined : json['zip'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'ssn': !exists(json, 'ssn') ? undefined : json['ssn'],
        'birthday': !exists(json, 'birthday') ? undefined : BirthdayFromJSON(json['birthday']),
        'email': !exists(json, 'email') ? undefined : json['email'],
        'suffix': !exists(json, 'suffix') ? undefined : json['suffix'],
    };
}

export function ConsumerUpdateToJSON(value?: ConsumerUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'firstName': value.firstName,
        'lastName': value.lastName,
        'address': value.address,
        'city': value.city,
        'state': value.state,
        'zip': value.zip,
        'phone': value.phone,
        'ssn': value.ssn,
        'birthday': BirthdayToJSON(value.birthday),
        'email': value.email,
        'suffix': value.suffix,
    };
}

