/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A consumer that was just created
 * @export
 * @interface CreatedConsumer
 */
export interface CreatedConsumer {
    /**
     * A consumer ID. See Create Consumer API for how to create a consumer ID.
     * @type {string}
     * @memberof CreatedConsumer
     */
    id?: string;
    /**
     * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/).
     * @type {number}
     * @memberof CreatedConsumer
     */
    createdDate?: number;
    /**
     * A customer ID represented as a number. See Add Customer API for how to create a customer ID.
     * @type {number}
     * @memberof CreatedConsumer
     */
    customerId?: number;
}

/**
 * Check if a given object implements the CreatedConsumer interface.
 */
export function instanceOfCreatedConsumer(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreatedConsumerFromJSON(json: any): CreatedConsumer {
    return CreatedConsumerFromJSONTyped(json, false);
}

export function CreatedConsumerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatedConsumer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdDate': !exists(json, 'createdDate') ? undefined : json['createdDate'],
        'customerId': !exists(json, 'customerId') ? undefined : json['customerId'],
    };
}

export function CreatedConsumerToJSON(value?: CreatedConsumer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdDate': value.createdDate,
        'customerId': value.customerId,
    };
}

