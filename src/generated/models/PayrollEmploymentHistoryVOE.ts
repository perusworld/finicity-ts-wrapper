/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PayrollEmployeeRecord } from './PayrollEmployeeRecord';
import {
    PayrollEmployeeRecordFromJSON,
    PayrollEmployeeRecordFromJSONTyped,
    PayrollEmployeeRecordToJSON,
} from './PayrollEmployeeRecord';
import type { PayrollEmploymentRecord } from './PayrollEmploymentRecord';
import {
    PayrollEmploymentRecordFromJSON,
    PayrollEmploymentRecordFromJSONTyped,
    PayrollEmploymentRecordToJSON,
} from './PayrollEmploymentRecord';
import type { PayrollVOEIncomeRecord } from './PayrollVOEIncomeRecord';
import {
    PayrollVOEIncomeRecordFromJSON,
    PayrollVOEIncomeRecordFromJSONTyped,
    PayrollVOEIncomeRecordToJSON,
} from './PayrollVOEIncomeRecord';

/**
 * 
 * @export
 * @interface PayrollEmploymentHistoryVOE
 */
export interface PayrollEmploymentHistoryVOE {
    /**
     * The last time the payroll data was updated in the payroll provider's system
     * @type {number}
     * @memberof PayrollEmploymentHistoryVOE
     */
    asOfDate: number;
    /**
     * Name of the employer as stated by the employer in the payroll system
     * @type {string}
     * @memberof PayrollEmploymentHistoryVOE
     */
    employerName: string;
    /**
     * The name of the payroll source where the data was retrieved
     * @type {string}
     * @memberof PayrollEmploymentHistoryVOE
     */
    payrollSource: string;
    /**
     * 
     * @type {PayrollEmployeeRecord}
     * @memberof PayrollEmploymentHistoryVOE
     */
    employee: PayrollEmployeeRecord;
    /**
     * 
     * @type {PayrollEmploymentRecord}
     * @memberof PayrollEmploymentHistoryVOE
     */
    employment: PayrollEmploymentRecord;
    /**
     * 
     * @type {PayrollVOEIncomeRecord}
     * @memberof PayrollEmploymentHistoryVOE
     */
    income: PayrollVOEIncomeRecord;
}

/**
 * Check if a given object implements the PayrollEmploymentHistoryVOE interface.
 */
export function instanceOfPayrollEmploymentHistoryVOE(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "asOfDate" in value;
    isInstance = isInstance && "employerName" in value;
    isInstance = isInstance && "payrollSource" in value;
    isInstance = isInstance && "employee" in value;
    isInstance = isInstance && "employment" in value;
    isInstance = isInstance && "income" in value;

    return isInstance;
}

export function PayrollEmploymentHistoryVOEFromJSON(json: any): PayrollEmploymentHistoryVOE {
    return PayrollEmploymentHistoryVOEFromJSONTyped(json, false);
}

export function PayrollEmploymentHistoryVOEFromJSONTyped(json: any, ignoreDiscriminator: boolean): PayrollEmploymentHistoryVOE {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'asOfDate': json['asOfDate'],
        'employerName': json['employerName'],
        'payrollSource': json['payrollSource'],
        'employee': PayrollEmployeeRecordFromJSON(json['employee']),
        'employment': PayrollEmploymentRecordFromJSON(json['employment']),
        'income': PayrollVOEIncomeRecordFromJSON(json['income']),
    };
}

export function PayrollEmploymentHistoryVOEToJSON(value?: PayrollEmploymentHistoryVOE | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'asOfDate': value.asOfDate,
        'employerName': value.employerName,
        'payrollSource': value.payrollSource,
        'employee': PayrollEmployeeRecordToJSON(value.employee),
        'employment': PayrollEmploymentRecordToJSON(value.employment),
        'income': PayrollVOEIncomeRecordToJSON(value.income),
    };
}

