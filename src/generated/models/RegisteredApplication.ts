/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RegisteredApplication
 */
export interface RegisteredApplication {
    /**
     * Identifier to track the application registration from the App Registration and Get App Registration Status APIs, represented as a number
     * @type {number}
     * @memberof RegisteredApplication
     */
    preAppId: number;
    /**
     * The status of an app registration request. "A" means approved. "P" means pending which is the status when initially submitted or when the app is modified and awaiting approval. "R" means rejected. If it is rejected there will be a note with the rejected reason.
     * @type {string}
     * @memberof RegisteredApplication
     */
    status: string;
}

/**
 * Check if a given object implements the RegisteredApplication interface.
 */
export function instanceOfRegisteredApplication(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "preAppId" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function RegisteredApplicationFromJSON(json: any): RegisteredApplication {
    return RegisteredApplicationFromJSONTyped(json, false);
}

export function RegisteredApplicationFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisteredApplication {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'preAppId': json['preAppId'],
        'status': json['status'],
    };
}

export function RegisteredApplicationToJSON(value?: RegisteredApplication | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'preAppId': value.preAppId,
        'status': value.status,
    };
}

