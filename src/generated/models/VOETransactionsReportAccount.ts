/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VOETransactionsReportIncomeStream } from './VOETransactionsReportIncomeStream';
import {
    VOETransactionsReportIncomeStreamFromJSON,
    VOETransactionsReportIncomeStreamFromJSONTyped,
    VOETransactionsReportIncomeStreamToJSON,
} from './VOETransactionsReportIncomeStream';

/**
 * 
 * @export
 * @interface VOETransactionsReportAccount
 */
export interface VOETransactionsReportAccount {
    /**
     * The ID of the account
     * @type {number}
     * @memberof VOETransactionsReportAccount
     */
    id?: number;
    /**
     * The account number from the institution (all digits except the last four are obfuscated)
     * @type {string}
     * @memberof VOETransactionsReportAccount
     */
    number?: string;
    /**
     * The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.
     * @type {string}
     * @memberof VOETransactionsReportAccount
     */
    ownerName?: string;
    /**
     * The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.
     * @type {string}
     * @memberof VOETransactionsReportAccount
     */
    ownerAddress?: string;
    /**
     * The account name from the institution
     * @type {string}
     * @memberof VOETransactionsReportAccount
     */
    name?: string;
    /**
     * One of the values from account types
     * @type {string}
     * @memberof VOETransactionsReportAccount
     */
    type?: string;
    /**
     * The status of the most recent aggregation attempt
     * @type {number}
     * @memberof VOETransactionsReportAccount
     */
    aggregationStatusCode?: number;
    /**
     * A list of income stream records
     * @type {Array<VOETransactionsReportIncomeStream>}
     * @memberof VOETransactionsReportAccount
     */
    incomeStreams?: Array<VOETransactionsReportIncomeStream>;
}

/**
 * Check if a given object implements the VOETransactionsReportAccount interface.
 */
export function instanceOfVOETransactionsReportAccount(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VOETransactionsReportAccountFromJSON(json: any): VOETransactionsReportAccount {
    return VOETransactionsReportAccountFromJSONTyped(json, false);
}

export function VOETransactionsReportAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): VOETransactionsReportAccount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'ownerName': !exists(json, 'ownerName') ? undefined : json['ownerName'],
        'ownerAddress': !exists(json, 'ownerAddress') ? undefined : json['ownerAddress'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'aggregationStatusCode': !exists(json, 'aggregationStatusCode') ? undefined : json['aggregationStatusCode'],
        'incomeStreams': !exists(json, 'incomeStreams') ? undefined : ((json['incomeStreams'] as Array<any>).map(VOETransactionsReportIncomeStreamFromJSON)),
    };
}

export function VOETransactionsReportAccountToJSON(value?: VOETransactionsReportAccount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'number': value.number,
        'ownerName': value.ownerName,
        'ownerAddress': value.ownerAddress,
        'name': value.name,
        'type': value.type,
        'aggregationStatusCode': value.aggregationStatusCode,
        'incomeStreams': value.incomeStreams === undefined ? undefined : ((value.incomeStreams as Array<any>).map(VOETransactionsReportIncomeStreamToJSON)),
    };
}

