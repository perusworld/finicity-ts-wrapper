/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CashFlowCashFlowBalance } from './CashFlowCashFlowBalance';
import {
    CashFlowCashFlowBalanceFromJSON,
    CashFlowCashFlowBalanceFromJSONTyped,
    CashFlowCashFlowBalanceToJSON,
} from './CashFlowCashFlowBalance';
import type { CashFlowCashFlowCharacteristic } from './CashFlowCashFlowCharacteristic';
import {
    CashFlowCashFlowCharacteristicFromJSON,
    CashFlowCashFlowCharacteristicFromJSONTyped,
    CashFlowCashFlowCharacteristicToJSON,
} from './CashFlowCashFlowCharacteristic';
import type { CashFlowCashFlowCredit } from './CashFlowCashFlowCredit';
import {
    CashFlowCashFlowCreditFromJSON,
    CashFlowCashFlowCreditFromJSONTyped,
    CashFlowCashFlowCreditToJSON,
} from './CashFlowCashFlowCredit';
import type { CashFlowCashFlowDebit } from './CashFlowCashFlowDebit';
import {
    CashFlowCashFlowDebitFromJSON,
    CashFlowCashFlowDebitFromJSONTyped,
    CashFlowCashFlowDebitToJSON,
} from './CashFlowCashFlowDebit';
import type { ReportTransaction } from './ReportTransaction';
import {
    ReportTransactionFromJSON,
    ReportTransactionFromJSONTyped,
    ReportTransactionToJSON,
} from './ReportTransaction';

/**
 * 
 * @export
 * @interface CashFlowReportAccount
 */
export interface CashFlowReportAccount {
    /**
     * Finicity account ID
     * @type {number}
     * @memberof CashFlowReportAccount
     */
    id?: number;
    /**
     * The name(s) of the account owner(s), retrieved from the institution.
     * @type {string}
     * @memberof CashFlowReportAccount
     */
    ownerName?: string;
    /**
     * The mailing address of the account owner, retrieved from the institution.
     * @type {string}
     * @memberof CashFlowReportAccount
     */
    ownerAddress?: string;
    /**
     * The account name from the institution
     * @type {string}
     * @memberof CashFlowReportAccount
     */
    name?: string;
    /**
     * The account number from the institution (obfuscated)
     * @type {string}
     * @memberof CashFlowReportAccount
     */
    number?: string;
    /**
     * CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit card` / `CD` / `MM` / `investment`...)
     * @type {string}
     * @memberof CashFlowReportAccount
     */
    type?: string;
    /**
     * The status of the most recent aggregation attempt for this account (non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable)
     * @type {number}
     * @memberof CashFlowReportAccount
     */
    aggregationStatusCode?: number;
    /**
     * The cleared balance of the account as-of `balanceDate`
     * @type {number}
     * @memberof CashFlowReportAccount
     */
    currentBalance?: number;
    /**
     * Available balance
     * @type {number}
     * @memberof CashFlowReportAccount
     */
    availableBalance?: number;
    /**
     * A timestamp showing when the `balance` was captured
     * @type {number}
     * @memberof CashFlowReportAccount
     */
    balanceDate?: number;
    /**
     * a list of transaction records
     * @type {Array<ReportTransaction>}
     * @memberof CashFlowReportAccount
     */
    transactions?: Array<ReportTransaction>;
    /**
     * 
     * @type {CashFlowCashFlowBalance}
     * @memberof CashFlowReportAccount
     */
    cashFlowBalance?: CashFlowCashFlowBalance;
    /**
     * 
     * @type {CashFlowCashFlowCredit}
     * @memberof CashFlowReportAccount
     */
    cashFlowCredit?: CashFlowCashFlowCredit;
    /**
     * 
     * @type {CashFlowCashFlowDebit}
     * @memberof CashFlowReportAccount
     */
    cashFlowDebit?: CashFlowCashFlowDebit;
    /**
     * 
     * @type {CashFlowCashFlowCharacteristic}
     * @memberof CashFlowReportAccount
     */
    cashFlowCharacteristic?: CashFlowCashFlowCharacteristic;
}

/**
 * Check if a given object implements the CashFlowReportAccount interface.
 */
export function instanceOfCashFlowReportAccount(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CashFlowReportAccountFromJSON(json: any): CashFlowReportAccount {
    return CashFlowReportAccountFromJSONTyped(json, false);
}

export function CashFlowReportAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashFlowReportAccount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'ownerName': !exists(json, 'ownerName') ? undefined : json['ownerName'],
        'ownerAddress': !exists(json, 'ownerAddress') ? undefined : json['ownerAddress'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'aggregationStatusCode': !exists(json, 'aggregationStatusCode') ? undefined : json['aggregationStatusCode'],
        'currentBalance': !exists(json, 'currentBalance') ? undefined : json['currentBalance'],
        'availableBalance': !exists(json, 'availableBalance') ? undefined : json['availableBalance'],
        'balanceDate': !exists(json, 'balanceDate') ? undefined : json['balanceDate'],
        'transactions': !exists(json, 'transactions') ? undefined : ((json['transactions'] as Array<any>).map(ReportTransactionFromJSON)),
        'cashFlowBalance': !exists(json, 'cashFlowBalance') ? undefined : CashFlowCashFlowBalanceFromJSON(json['cashFlowBalance']),
        'cashFlowCredit': !exists(json, 'cashFlowCredit') ? undefined : CashFlowCashFlowCreditFromJSON(json['cashFlowCredit']),
        'cashFlowDebit': !exists(json, 'cashFlowDebit') ? undefined : CashFlowCashFlowDebitFromJSON(json['cashFlowDebit']),
        'cashFlowCharacteristic': !exists(json, 'cashFlowCharacteristic') ? undefined : CashFlowCashFlowCharacteristicFromJSON(json['cashFlowCharacteristic']),
    };
}

export function CashFlowReportAccountToJSON(value?: CashFlowReportAccount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'ownerName': value.ownerName,
        'ownerAddress': value.ownerAddress,
        'name': value.name,
        'number': value.number,
        'type': value.type,
        'aggregationStatusCode': value.aggregationStatusCode,
        'currentBalance': value.currentBalance,
        'availableBalance': value.availableBalance,
        'balanceDate': value.balanceDate,
        'transactions': value.transactions === undefined ? undefined : ((value.transactions as Array<any>).map(ReportTransactionToJSON)),
        'cashFlowBalance': CashFlowCashFlowBalanceToJSON(value.cashFlowBalance),
        'cashFlowCredit': CashFlowCashFlowCreditToJSON(value.cashFlowCredit),
        'cashFlowDebit': CashFlowCashFlowDebitToJSON(value.cashFlowDebit),
        'cashFlowCharacteristic': CashFlowCashFlowCharacteristicToJSON(value.cashFlowCharacteristic),
    };
}

