/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReportTransaction } from './ReportTransaction';
import {
    ReportTransactionFromJSON,
    ReportTransactionFromJSONTyped,
    ReportTransactionToJSON,
} from './ReportTransaction';

/**
 * 
 * @export
 * @interface CashFlowPossibleLoanDepositsAccount
 */
export interface CashFlowPossibleLoanDepositsAccount {
    /**
     * Finicity account ID
     * @type {string}
     * @memberof CashFlowPossibleLoanDepositsAccount
     */
    id: string;
    /**
     * The name(s) of the account owner(s), retrieved from the institution.
     * @type {string}
     * @memberof CashFlowPossibleLoanDepositsAccount
     */
    ownerName: string;
    /**
     * The mailing address of the account owner, retrieved from the institution.
     * @type {string}
     * @memberof CashFlowPossibleLoanDepositsAccount
     */
    ownerAddress: string;
    /**
     * The account name from the institution
     * @type {string}
     * @memberof CashFlowPossibleLoanDepositsAccount
     */
    name: string;
    /**
     * The account number from the institution (obfuscated)
     * @type {string}
     * @memberof CashFlowPossibleLoanDepositsAccount
     */
    number: string;
    /**
     * CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit card` / `CD` / `MM` / `investment`...)
     * @type {string}
     * @memberof CashFlowPossibleLoanDepositsAccount
     */
    type: string;
    /**
     * The status of the most recent aggregation attempt for this account (non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable)
     * @type {number}
     * @memberof CashFlowPossibleLoanDepositsAccount
     */
    aggregationStatusCode: number;
    /**
     * The cleared balance of the account as-of `balanceDate`
     * @type {number}
     * @memberof CashFlowPossibleLoanDepositsAccount
     */
    currentBalance: number;
    /**
     * Available balance
     * @type {number}
     * @memberof CashFlowPossibleLoanDepositsAccount
     */
    availableBalance: number;
    /**
     * A timestamp showing when the `balance` was captured
     * @type {number}
     * @memberof CashFlowPossibleLoanDepositsAccount
     */
    balanceDate: number;
    /**
     * a list of transaction records
     * @type {Array<ReportTransaction>}
     * @memberof CashFlowPossibleLoanDepositsAccount
     */
    transactions: Array<ReportTransaction>;
}

/**
 * Check if a given object implements the CashFlowPossibleLoanDepositsAccount interface.
 */
export function instanceOfCashFlowPossibleLoanDepositsAccount(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "ownerName" in value;
    isInstance = isInstance && "ownerAddress" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "number" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "aggregationStatusCode" in value;
    isInstance = isInstance && "currentBalance" in value;
    isInstance = isInstance && "availableBalance" in value;
    isInstance = isInstance && "balanceDate" in value;
    isInstance = isInstance && "transactions" in value;

    return isInstance;
}

export function CashFlowPossibleLoanDepositsAccountFromJSON(json: any): CashFlowPossibleLoanDepositsAccount {
    return CashFlowPossibleLoanDepositsAccountFromJSONTyped(json, false);
}

export function CashFlowPossibleLoanDepositsAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashFlowPossibleLoanDepositsAccount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'ownerName': json['ownerName'],
        'ownerAddress': json['ownerAddress'],
        'name': json['name'],
        'number': json['number'],
        'type': json['type'],
        'aggregationStatusCode': json['aggregationStatusCode'],
        'currentBalance': json['currentBalance'],
        'availableBalance': json['availableBalance'],
        'balanceDate': json['balanceDate'],
        'transactions': ((json['transactions'] as Array<any>).map(ReportTransactionFromJSON)),
    };
}

export function CashFlowPossibleLoanDepositsAccountToJSON(value?: CashFlowPossibleLoanDepositsAccount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'ownerName': value.ownerName,
        'ownerAddress': value.ownerAddress,
        'name': value.name,
        'number': value.number,
        'type': value.type,
        'aggregationStatusCode': value.aggregationStatusCode,
        'currentBalance': value.currentBalance,
        'availableBalance': value.availableBalance,
        'balanceDate': value.balanceDate,
        'transactions': ((value.transactions as Array<any>).map(ReportTransactionToJSON)),
    };
}

