/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NetMonthly } from './NetMonthly';
import {
    NetMonthlyFromJSON,
    NetMonthlyFromJSONTyped,
    NetMonthlyToJSON,
} from './NetMonthly';
import type { ReportIncomeEstimate } from './ReportIncomeEstimate';
import {
    ReportIncomeEstimateFromJSON,
    ReportIncomeEstimateFromJSONTyped,
    ReportIncomeEstimateToJSON,
} from './ReportIncomeEstimate';

/**
 * 
 * @export
 * @interface ReportIncomeStreamSummary
 */
export interface ReportIncomeStreamSummary {
    /**
     * Possible values: "HIGH", "MODERATE", "LOW", "NO"
     * @type {string}
     * @memberof ReportIncomeStreamSummary
     */
    confidenceType: string;
    /**
     * A list of net monthly records. One instance for each complete calendar month in the report.
     * @type {Array<NetMonthly>}
     * @memberof ReportIncomeStreamSummary
     */
    netMonthly: Array<NetMonthly>;
    /**
     * 
     * @type {ReportIncomeEstimate}
     * @memberof ReportIncomeStreamSummary
     */
    incomeEstimate: ReportIncomeEstimate;
}

/**
 * Check if a given object implements the ReportIncomeStreamSummary interface.
 */
export function instanceOfReportIncomeStreamSummary(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "confidenceType" in value;
    isInstance = isInstance && "netMonthly" in value;
    isInstance = isInstance && "incomeEstimate" in value;

    return isInstance;
}

export function ReportIncomeStreamSummaryFromJSON(json: any): ReportIncomeStreamSummary {
    return ReportIncomeStreamSummaryFromJSONTyped(json, false);
}

export function ReportIncomeStreamSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportIncomeStreamSummary {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'confidenceType': json['confidenceType'],
        'netMonthly': ((json['netMonthly'] as Array<any>).map(NetMonthlyFromJSON)),
        'incomeEstimate': ReportIncomeEstimateFromJSON(json['incomeEstimate']),
    };
}

export function ReportIncomeStreamSummaryToJSON(value?: ReportIncomeStreamSummary | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'confidenceType': value.confidenceType,
        'netMonthly': ((value.netMonthly as Array<any>).map(NetMonthlyToJSON)),
        'incomeEstimate': ReportIncomeEstimateToJSON(value.incomeEstimate),
    };
}

