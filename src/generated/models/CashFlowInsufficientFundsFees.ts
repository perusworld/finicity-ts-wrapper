/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InsufficientFundsTransaction } from './InsufficientFundsTransaction';
import {
    InsufficientFundsTransactionFromJSON,
    InsufficientFundsTransactionFromJSONTyped,
    InsufficientFundsTransactionToJSON,
} from './InsufficientFundsTransaction';

/**
 * Non Sufficient Fund Fees
 * @export
 * @interface CashFlowInsufficientFundsFees
 */
export interface CashFlowInsufficientFundsFees {
    /**
     * Count of all NSF transactions during the report
     * @type {number}
     * @memberof CashFlowInsufficientFundsFees
     */
    countOfTransactionsForTheReportTimePeriod?: number;
    /**
     * Sum of all NSF transactions during the report
     * @type {number}
     * @memberof CashFlowInsufficientFundsFees
     */
    sumOfTransactionsForTheReportTimePeriod?: number;
    /**
     * Transactions categorized as NSF
     * @type {Array<InsufficientFundsTransaction>}
     * @memberof CashFlowInsufficientFundsFees
     */
    transactions?: Array<InsufficientFundsTransaction>;
}

/**
 * Check if a given object implements the CashFlowInsufficientFundsFees interface.
 */
export function instanceOfCashFlowInsufficientFundsFees(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CashFlowInsufficientFundsFeesFromJSON(json: any): CashFlowInsufficientFundsFees {
    return CashFlowInsufficientFundsFeesFromJSONTyped(json, false);
}

export function CashFlowInsufficientFundsFeesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashFlowInsufficientFundsFees {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'countOfTransactionsForTheReportTimePeriod': !exists(json, 'countOfTransactionsForTheReportTimePeriod') ? undefined : json['countOfTransactionsForTheReportTimePeriod'],
        'sumOfTransactionsForTheReportTimePeriod': !exists(json, 'sumOfTransactionsForTheReportTimePeriod') ? undefined : json['sumOfTransactionsForTheReportTimePeriod'],
        'transactions': !exists(json, 'transactions') ? undefined : ((json['transactions'] as Array<any>).map(InsufficientFundsTransactionFromJSON)),
    };
}

export function CashFlowInsufficientFundsFeesToJSON(value?: CashFlowInsufficientFundsFees | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'countOfTransactionsForTheReportTimePeriod': value.countOfTransactionsForTheReportTimePeriod,
        'sumOfTransactionsForTheReportTimePeriod': value.sumOfTransactionsForTheReportTimePeriod,
        'transactions': value.transactions === undefined ? undefined : ((value.transactions as Array<any>).map(InsufficientFundsTransactionToJSON)),
    };
}

