/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ObbAccountOwner } from './ObbAccountOwner';
import {
    ObbAccountOwnerFromJSON,
    ObbAccountOwnerFromJSONTyped,
    ObbAccountOwnerToJSON,
} from './ObbAccountOwner';
import type { ObbInstitution } from './ObbInstitution';
import {
    ObbInstitutionFromJSON,
    ObbInstitutionFromJSONTyped,
    ObbInstitutionToJSON,
} from './ObbInstitution';

/**
 * Details of the account and financial institution
 * @export
 * @interface ObbAccountDetails
 */
export interface ObbAccountDetails {
    /**
     * The account number from a financial institution in truncated format
     * @type {string}
     * @memberof ObbAccountDetails
     */
    accountNumberDisplay?: string;
    /**
     * 
     * @type {ObbAccountOwner}
     * @memberof ObbAccountDetails
     */
    accountOwner: ObbAccountOwner;
    /**
     * A timestamp showing the last aggregation attempt. This will not be present until you have run your first aggregation for the account.
     * @type {string}
     * @memberof ObbAccountDetails
     */
    aggregationAttemptDate?: string;
    /**
     * The status of the most recent aggregation attempt. This will not be present until you have run your first aggregation for the account
     * @type {number}
     * @memberof ObbAccountDetails
     */
    aggregationStatusCode?: number;
    /**
     * A timestamp showing the last successful aggregation of the account. This will not be present until you have run your first aggregation for the account.
     * @type {string}
     * @memberof ObbAccountDetails
     */
    aggregationSuccessDate?: string;
    /**
     * The currency of the account
     * @type {string}
     * @memberof ObbAccountDetails
     */
    currency?: string;
    /**
     * Current reported balance of the account
     * @type {number}
     * @memberof ObbAccountDetails
     */
    currentBalance?: number;
    /**
     * An account ID represented as a number
     * @type {number}
     * @memberof ObbAccountDetails
     */
    id: number;
    /**
     * 
     * @type {ObbInstitution}
     * @memberof ObbAccountDetails
     */
    institution: ObbInstitution;
    /**
     * An institution login ID (from the account record), represented as a number
     * @type {number}
     * @memberof ObbAccountDetails
     */
    institutionLoginId?: number;
    /**
     * The account name from the institution
     * @type {string}
     * @memberof ObbAccountDetails
     */
    name?: string;
    /**
     * The last 4 digits of the ACH account number
     * @type {number}
     * @memberof ObbAccountDetails
     */
    realAccountNumberLast4?: number;
    /**
     * pending during account discovery, always active following successful account activation
     * @type {string}
     * @memberof ObbAccountDetails
     */
    status?: string;
    /**
     * Account type, e.g. checking/saving
     * @type {string}
     * @memberof ObbAccountDetails
     */
    type?: string;
}

/**
 * Check if a given object implements the ObbAccountDetails interface.
 */
export function instanceOfObbAccountDetails(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "accountOwner" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "institution" in value;

    return isInstance;
}

export function ObbAccountDetailsFromJSON(json: any): ObbAccountDetails {
    return ObbAccountDetailsFromJSONTyped(json, false);
}

export function ObbAccountDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObbAccountDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountNumberDisplay': !exists(json, 'accountNumberDisplay') ? undefined : json['accountNumberDisplay'],
        'accountOwner': ObbAccountOwnerFromJSON(json['accountOwner']),
        'aggregationAttemptDate': !exists(json, 'aggregationAttemptDate') ? undefined : json['aggregationAttemptDate'],
        'aggregationStatusCode': !exists(json, 'aggregationStatusCode') ? undefined : json['aggregationStatusCode'],
        'aggregationSuccessDate': !exists(json, 'aggregationSuccessDate') ? undefined : json['aggregationSuccessDate'],
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'currentBalance': !exists(json, 'currentBalance') ? undefined : json['currentBalance'],
        'id': json['id'],
        'institution': ObbInstitutionFromJSON(json['institution']),
        'institutionLoginId': !exists(json, 'institutionLoginId') ? undefined : json['institutionLoginId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'realAccountNumberLast4': !exists(json, 'realAccountNumberLast4') ? undefined : json['realAccountNumberLast4'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function ObbAccountDetailsToJSON(value?: ObbAccountDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountNumberDisplay': value.accountNumberDisplay,
        'accountOwner': ObbAccountOwnerToJSON(value.accountOwner),
        'aggregationAttemptDate': value.aggregationAttemptDate,
        'aggregationStatusCode': value.aggregationStatusCode,
        'aggregationSuccessDate': value.aggregationSuccessDate,
        'currency': value.currency,
        'currentBalance': value.currentBalance,
        'id': value.id,
        'institution': ObbInstitutionToJSON(value.institution),
        'institutionLoginId': value.institutionLoginId,
        'name': value.name,
        'realAccountNumberLast4': value.realAccountNumberLast4,
        'status': value.status,
        'type': value.type,
    };
}

