/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InsufficientFundsTransaction
 */
export interface InsufficientFundsTransaction {
    /**
     * Amount of the NSF transaction
     * @type {number}
     * @memberof InsufficientFundsTransaction
     */
    amount: number;
    /**
     * Description of the transaction
     * @type {string}
     * @memberof InsufficientFundsTransaction
     */
    description?: string;
    /**
     * Transaction memo
     * @type {string}
     * @memberof InsufficientFundsTransaction
     */
    memo?: string;
    /**
     * Posted date of the NSF transaction
     * @type {string}
     * @memberof InsufficientFundsTransaction
     */
    postedDate: string;
    /**
     * Finicity transaction ID
     * @type {number}
     * @memberof InsufficientFundsTransaction
     */
    transactionId: number;
}

/**
 * Check if a given object implements the InsufficientFundsTransaction interface.
 */
export function instanceOfInsufficientFundsTransaction(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "postedDate" in value;
    isInstance = isInstance && "transactionId" in value;

    return isInstance;
}

export function InsufficientFundsTransactionFromJSON(json: any): InsufficientFundsTransaction {
    return InsufficientFundsTransactionFromJSONTyped(json, false);
}

export function InsufficientFundsTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): InsufficientFundsTransaction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'memo': !exists(json, 'memo') ? undefined : json['memo'],
        'postedDate': json['postedDate'],
        'transactionId': json['transactionId'],
    };
}

export function InsufficientFundsTransactionToJSON(value?: InsufficientFundsTransaction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'description': value.description,
        'memo': value.memo,
        'postedDate': value.postedDate,
        'transactionId': value.transactionId,
    };
}

