/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccountDetailsTxBased } from './AccountDetailsTxBased';
import {
    AccountDetailsTxBasedFromJSON,
    AccountDetailsTxBasedFromJSONTyped,
    AccountDetailsTxBasedToJSON,
} from './AccountDetailsTxBased';
import type { PrequalificationReportAssetSummary } from './PrequalificationReportAssetSummary';
import {
    PrequalificationReportAssetSummaryFromJSON,
    PrequalificationReportAssetSummaryFromJSONTyped,
    PrequalificationReportAssetSummaryToJSON,
} from './PrequalificationReportAssetSummary';
import type { ReportAccountPosition } from './ReportAccountPosition';
import {
    ReportAccountPositionFromJSON,
    ReportAccountPositionFromJSONTyped,
    ReportAccountPositionToJSON,
} from './ReportAccountPosition';
import type { ReportTransactionNewTxBased } from './ReportTransactionNewTxBased';
import {
    ReportTransactionNewTxBasedFromJSON,
    ReportTransactionNewTxBasedFromJSONTyped,
    ReportTransactionNewTxBasedToJSON,
} from './ReportTransactionNewTxBased';
import type { VOAIReportIncomeStream } from './VOAIReportIncomeStream';
import {
    VOAIReportIncomeStreamFromJSON,
    VOAIReportIncomeStreamFromJSONTyped,
    VOAIReportIncomeStreamToJSON,
} from './VOAIReportIncomeStream';

/**
 * 
 * @export
 * @interface VOAWithIncomeReportAccount
 */
export interface VOAWithIncomeReportAccount {
    /**
     * The ID of the account
     * @type {number}
     * @memberof VOAWithIncomeReportAccount
     */
    id?: number;
    /**
     * The account number from the institution (all digits except the last four are obfuscated)
     * @type {string}
     * @memberof VOAWithIncomeReportAccount
     */
    number?: string;
    /**
     * The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.
     * @type {string}
     * @memberof VOAWithIncomeReportAccount
     */
    ownerName?: string;
    /**
     * The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report.
     * @type {string}
     * @memberof VOAWithIncomeReportAccount
     */
    ownerAddress?: string;
    /**
     * The account name from the institution
     * @type {string}
     * @memberof VOAWithIncomeReportAccount
     */
    name?: string;
    /**
     * One of the values from account types
     * @type {string}
     * @memberof VOAWithIncomeReportAccount
     */
    type?: string;
    /**
     * The available balance for the account
     * @type {number}
     * @memberof VOAWithIncomeReportAccount
     */
    availableBalance?: number;
    /**
     * The status of the most recent aggregation attempt
     * @type {number}
     * @memberof VOAWithIncomeReportAccount
     */
    aggregationStatusCode?: number;
    /**
     * The cleared balance of the account as-of balanceDate
     * @type {number}
     * @memberof VOAWithIncomeReportAccount
     */
    balance?: number;
    /**
     * A timestamp showing when the balance was captured
     * @type {number}
     * @memberof VOAWithIncomeReportAccount
     */
    balanceDate?: number;
    /**
     * The average monthly balance of this account
     * @type {number}
     * @memberof VOAWithIncomeReportAccount
     */
    averageMonthlyBalance?: number;
    /**
     * The count for the total number of insufficient funds transactions, based on the `fromDate` of the report.
     * @type {number}
     * @memberof VOAWithIncomeReportAccount
     */
    totNumberInsufficientFundsFeeDebitTxAccount?: number;
    /**
     * The count for the total number of insufficient funds transactions for the last two months, based on the `fromDate` of the report.
     * @type {number}
     * @memberof VOAWithIncomeReportAccount
     */
    totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount?: number;
    /**
     * The number of days since the most recent insufficient funds transaction, based on the `fromDate` of the report.
     * @type {number}
     * @memberof VOAWithIncomeReportAccount
     */
    totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount?: number;
    /**
     * a list of transaction records
     * @type {Array<ReportTransactionNewTxBased>}
     * @memberof VOAWithIncomeReportAccount
     */
    transactions?: Array<ReportTransactionNewTxBased>;
    /**
     * 
     * @type {AccountDetailsTxBased}
     * @memberof VOAWithIncomeReportAccount
     */
    details?: AccountDetailsTxBased;
    /**
     * 
     * @type {ReportAccountPosition}
     * @memberof VOAWithIncomeReportAccount
     */
    position?: ReportAccountPosition;
    /**
     * 
     * @type {PrequalificationReportAssetSummary}
     * @memberof VOAWithIncomeReportAccount
     */
    asset?: PrequalificationReportAssetSummary;
    /**
     * A list of income stream records
     * @type {Array<VOAIReportIncomeStream>}
     * @memberof VOAWithIncomeReportAccount
     */
    incomeStreams?: Array<VOAIReportIncomeStream>;
}

/**
 * Check if a given object implements the VOAWithIncomeReportAccount interface.
 */
export function instanceOfVOAWithIncomeReportAccount(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VOAWithIncomeReportAccountFromJSON(json: any): VOAWithIncomeReportAccount {
    return VOAWithIncomeReportAccountFromJSONTyped(json, false);
}

export function VOAWithIncomeReportAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): VOAWithIncomeReportAccount {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'number': !exists(json, 'number') ? undefined : json['number'],
        'ownerName': !exists(json, 'ownerName') ? undefined : json['ownerName'],
        'ownerAddress': !exists(json, 'ownerAddress') ? undefined : json['ownerAddress'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'availableBalance': !exists(json, 'availableBalance') ? undefined : json['availableBalance'],
        'aggregationStatusCode': !exists(json, 'aggregationStatusCode') ? undefined : json['aggregationStatusCode'],
        'balance': !exists(json, 'balance') ? undefined : json['balance'],
        'balanceDate': !exists(json, 'balanceDate') ? undefined : json['balanceDate'],
        'averageMonthlyBalance': !exists(json, 'averageMonthlyBalance') ? undefined : json['averageMonthlyBalance'],
        'totNumberInsufficientFundsFeeDebitTxAccount': !exists(json, 'totNumberInsufficientFundsFeeDebitTxAccount') ? undefined : json['totNumberInsufficientFundsFeeDebitTxAccount'],
        'totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount': !exists(json, 'totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount') ? undefined : json['totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount'],
        'totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount': !exists(json, 'totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount') ? undefined : json['totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount'],
        'transactions': !exists(json, 'transactions') ? undefined : ((json['transactions'] as Array<any>).map(ReportTransactionNewTxBasedFromJSON)),
        'details': !exists(json, 'details') ? undefined : AccountDetailsTxBasedFromJSON(json['details']),
        'position': !exists(json, 'position') ? undefined : ReportAccountPositionFromJSON(json['position']),
        'asset': !exists(json, 'asset') ? undefined : PrequalificationReportAssetSummaryFromJSON(json['asset']),
        'incomeStreams': !exists(json, 'incomeStreams') ? undefined : ((json['incomeStreams'] as Array<any>).map(VOAIReportIncomeStreamFromJSON)),
    };
}

export function VOAWithIncomeReportAccountToJSON(value?: VOAWithIncomeReportAccount | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'number': value.number,
        'ownerName': value.ownerName,
        'ownerAddress': value.ownerAddress,
        'name': value.name,
        'type': value.type,
        'availableBalance': value.availableBalance,
        'aggregationStatusCode': value.aggregationStatusCode,
        'balance': value.balance,
        'balanceDate': value.balanceDate,
        'averageMonthlyBalance': value.averageMonthlyBalance,
        'totNumberInsufficientFundsFeeDebitTxAccount': value.totNumberInsufficientFundsFeeDebitTxAccount,
        'totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount': value.totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount,
        'totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount': value.totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount,
        'transactions': value.transactions === undefined ? undefined : ((value.transactions as Array<any>).map(ReportTransactionNewTxBasedToJSON)),
        'details': AccountDetailsTxBasedToJSON(value.details),
        'position': ReportAccountPositionToJSON(value.position),
        'asset': PrequalificationReportAssetSummaryToJSON(value.asset),
        'incomeStreams': value.incomeStreams === undefined ? undefined : ((value.incomeStreams as Array<any>).map(VOAIReportIncomeStreamToJSON)),
    };
}

