/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ThirdPartyAccessProduct } from './ThirdPartyAccessProduct';
import {
    ThirdPartyAccessProductFromJSON,
    ThirdPartyAccessProductFromJSONTyped,
    ThirdPartyAccessProductToJSON,
} from './ThirdPartyAccessProduct';
import type { ThirdPartyAccessProvenance } from './ThirdPartyAccessProvenance';
import {
    ThirdPartyAccessProvenanceFromJSON,
    ThirdPartyAccessProvenanceFromJSONTyped,
    ThirdPartyAccessProvenanceToJSON,
} from './ThirdPartyAccessProvenance';

/**
 * An object representing consent receipt
 * @export
 * @interface ThirdPartyAccessReceipt
 */
export interface ThirdPartyAccessReceipt {
    /**
     * Representation of the type of consent receipt
     * @type {number}
     * @memberof ThirdPartyAccessReceipt
     */
    profile?: number;
    /**
     * A schema version of receipt
     * @type {string}
     * @memberof ThirdPartyAccessReceipt
     */
    version?: string;
    /**
     * This is officially the Consent Receipt ID, but is aliased as the Access Key ID. This is a unique identifier managed by Finicity that points to the contents of this JSON document.
     * @type {string}
     * @memberof ThirdPartyAccessReceipt
     */
    receiptId?: string;
    /**
     * This is recipient's customerId represented as a pseudoidentifier
     * @type {string}
     * @memberof ThirdPartyAccessReceipt
     */
    customerId?: string;
    /**
     * Your Partner ID displayed in the [Developer Dashboard](https://developer.mastercard.com/account/log-in)
     * @type {string}
     * @memberof ThirdPartyAccessReceipt
     */
    partnerId?: string;
    /**
     * 
     * @type {Array<ThirdPartyAccessProduct>}
     * @memberof ThirdPartyAccessReceipt
     */
    products?: Array<ThirdPartyAccessProduct>;
    /**
     * 
     * @type {ThirdPartyAccessProvenance}
     * @memberof ThirdPartyAccessReceipt
     */
    provenance?: ThirdPartyAccessProvenance;
    /**
     * A date-time with time zone
     * @type {Date}
     * @memberof ThirdPartyAccessReceipt
     */
    timestamp?: Date;
}

/**
 * Check if a given object implements the ThirdPartyAccessReceipt interface.
 */
export function instanceOfThirdPartyAccessReceipt(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ThirdPartyAccessReceiptFromJSON(json: any): ThirdPartyAccessReceipt {
    return ThirdPartyAccessReceiptFromJSONTyped(json, false);
}

export function ThirdPartyAccessReceiptFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThirdPartyAccessReceipt {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'profile': !exists(json, 'profile') ? undefined : json['profile'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'receiptId': !exists(json, 'receiptId') ? undefined : json['receiptId'],
        'customerId': !exists(json, 'customerId') ? undefined : json['customerId'],
        'partnerId': !exists(json, 'partnerId') ? undefined : json['partnerId'],
        'products': !exists(json, 'products') ? undefined : ((json['products'] as Array<any>).map(ThirdPartyAccessProductFromJSON)),
        'provenance': !exists(json, 'provenance') ? undefined : ThirdPartyAccessProvenanceFromJSON(json['provenance']),
        'timestamp': !exists(json, 'timestamp') ? undefined : (new Date(json['timestamp'])),
    };
}

export function ThirdPartyAccessReceiptToJSON(value?: ThirdPartyAccessReceipt | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'profile': value.profile,
        'version': value.version,
        'receiptId': value.receiptId,
        'customerId': value.customerId,
        'partnerId': value.partnerId,
        'products': value.products === undefined ? undefined : ((value.products as Array<any>).map(ThirdPartyAccessProductToJSON)),
        'provenance': ThirdPartyAccessProvenanceToJSON(value.provenance),
        'timestamp': value.timestamp === undefined ? undefined : (value.timestamp.toISOString()),
    };
}

