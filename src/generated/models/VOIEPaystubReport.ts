/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ErrorMessage } from './ErrorMessage';
import {
    ErrorMessageFromJSON,
    ErrorMessageFromJSONTyped,
    ErrorMessageToJSON,
} from './ErrorMessage';
import type { VOIEPaystubPayStatement } from './VOIEPaystubPayStatement';
import {
    VOIEPaystubPayStatementFromJSON,
    VOIEPaystubPayStatementFromJSONTyped,
    VOIEPaystubPayStatementToJSON,
} from './VOIEPaystubPayStatement';

/**
 * A VOIE Paystub report
 * @export
 * @interface VOIEPaystubReport
 */
export interface VOIEPaystubReport {
    /**
     * A report ID
     * @type {string}
     * @memberof VOIEPaystubReport
     */
    id?: string;
    /**
     * The type of customer ("active" or "testing" or "" for all types)
     * @type {string}
     * @memberof VOIEPaystubReport
     */
    customerType?: string;
    /**
     * A customer ID represented as a number. See Add Customer API for how to create a customer ID.
     * @type {number}
     * @memberof VOIEPaystubReport
     */
    customerId?: number;
    /**
     * Finicity indicator to track all activity associated with this report
     * @type {string}
     * @memberof VOIEPaystubReport
     */
    requestId?: string;
    /**
     * Name of a Finicity partner
     * @type {string}
     * @memberof VOIEPaystubReport
     */
    requesterName?: string;
    /**
     * A date in Unix epoch time (in seconds). See: [Handling Epoch Dates and Times](https://developer.mastercard.com/open-banking-us/documentation/codes-and-formats/). Note: If the report is retrieved on a day other than the day it was generated, on the header of the PDF version of the report there will be a "Retrieved Date" populated.
     * @type {number}
     * @memberof VOIEPaystubReport
     */
    createdDate?: number;
    /**
     * Title of the report
     * @type {string}
     * @memberof VOIEPaystubReport
     */
    title?: string;
    /**
     * A consumer ID. See Create Consumer API for how to create a consumer ID.
     * @type {string}
     * @memberof VOIEPaystubReport
     */
    consumerId?: string;
    /**
     * Last 4 digits of a SSN
     * @type {string}
     * @memberof VOIEPaystubReport
     */
    consumerSsn?: string;
    /**
     * A report type. Possible values:
     * 
     * * `voi` 
     * 
     * * `voa` 
     * 
     * * `voaHistory` 
     * 
     * * `history` 
     * 
     * * `voieTxVerify` 
     * 
     * * `voieWithReport` 
     * 
     * * `voieWithInterview` 
     * 
     * * `paystatement` 
     * 
     * * `preQualVoa` 
     * 
     * * `assetSummary` 
     * 
     * * `voie` 
     * 
     * * `transactions` 
     * 
     * * `statement` 
     * 
     * * `voiePayroll` 
     * 
     * * `voeTransactions` 
     * 
     * * `voePayroll` 
     * 
     * * `cfrp` 
     * 
     * * `cfrb`
     * 
     * @type {string}
     * @memberof VOIEPaystubReport
     */
    type?: string;
    /**
     * A report generation status. Possible values:
     * 
     * * `inProgress`
     * 
     * * `success`
     * 
     * * `failure`
     * 
     * @type {string}
     * @memberof VOIEPaystubReport
     */
    status?: string;
    /**
     * In case errors occurred during the report generation
     * @type {Array<ErrorMessage>}
     * @memberof VOIEPaystubReport
     */
    errors?: Array<ErrorMessage>;
    /**
     * A unique identifier that will be consistent across all reports created for the same customer
     * @type {string}
     * @memberof VOIEPaystubReport
     */
    portfolioId?: string;
    /**
     * The pay statements included in the report
     * @type {Array<string>}
     * @memberof VOIEPaystubReport
     */
    assetIds?: Array<string>;
    /**
     * Total number of billable pay statements included in the report
     * @type {number}
     * @memberof VOIEPaystubReport
     */
    numberOfBillableAssets?: number;
    /**
     * Extracted pay statement details, and the transaction matching summary
     * @type {Array<VOIEPaystubPayStatement>}
     * @memberof VOIEPaystubReport
     */
    payStatements?: Array<VOIEPaystubPayStatement>;
}

/**
 * Check if a given object implements the VOIEPaystubReport interface.
 */
export function instanceOfVOIEPaystubReport(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VOIEPaystubReportFromJSON(json: any): VOIEPaystubReport {
    return VOIEPaystubReportFromJSONTyped(json, false);
}

export function VOIEPaystubReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): VOIEPaystubReport {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'customerType': !exists(json, 'customerType') ? undefined : json['customerType'],
        'customerId': !exists(json, 'customerId') ? undefined : json['customerId'],
        'requestId': !exists(json, 'requestId') ? undefined : json['requestId'],
        'requesterName': !exists(json, 'requesterName') ? undefined : json['requesterName'],
        'createdDate': !exists(json, 'createdDate') ? undefined : json['createdDate'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'consumerId': !exists(json, 'consumerId') ? undefined : json['consumerId'],
        'consumerSsn': !exists(json, 'consumerSsn') ? undefined : json['consumerSsn'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'errors': !exists(json, 'errors') ? undefined : ((json['errors'] as Array<any>).map(ErrorMessageFromJSON)),
        'portfolioId': !exists(json, 'portfolioId') ? undefined : json['portfolioId'],
        'assetIds': !exists(json, 'assetIds') ? undefined : json['assetIds'],
        'numberOfBillableAssets': !exists(json, 'numberOfBillableAssets') ? undefined : json['numberOfBillableAssets'],
        'payStatements': !exists(json, 'payStatements') ? undefined : ((json['payStatements'] as Array<any>).map(VOIEPaystubPayStatementFromJSON)),
    };
}

export function VOIEPaystubReportToJSON(value?: VOIEPaystubReport | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'customerType': value.customerType,
        'customerId': value.customerId,
        'requestId': value.requestId,
        'requesterName': value.requesterName,
        'createdDate': value.createdDate,
        'title': value.title,
        'consumerId': value.consumerId,
        'consumerSsn': value.consumerSsn,
        'type': value.type,
        'status': value.status,
        'errors': value.errors === undefined ? undefined : ((value.errors as Array<any>).map(ErrorMessageToJSON)),
        'portfolioId': value.portfolioId,
        'assetIds': value.assetIds,
        'numberOfBillableAssets': value.numberOfBillableAssets,
        'payStatements': value.payStatements === undefined ? undefined : ((value.payStatements as Array<any>).map(VOIEPaystubPayStatementToJSON)),
    };
}

