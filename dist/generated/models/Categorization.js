"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CategorizationToJSON = exports.CategorizationFromJSONTyped = exports.CategorizationFromJSON = exports.instanceOfCategorization = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the Categorization interface.
 */
function instanceOfCategorization(value) {
    let isInstance = true;
    isInstance = isInstance && "normalizedPayeeName" in value;
    isInstance = isInstance && "category" in value;
    isInstance = isInstance && "country" in value;
    return isInstance;
}
exports.instanceOfCategorization = instanceOfCategorization;
function CategorizationFromJSON(json) {
    return CategorizationFromJSONTyped(json, false);
}
exports.CategorizationFromJSON = CategorizationFromJSON;
function CategorizationFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'normalizedPayeeName': json['normalizedPayeeName'],
        'category': json['category'],
        'city': !(0, runtime_1.exists)(json, 'city') ? undefined : json['city'],
        'state': !(0, runtime_1.exists)(json, 'state') ? undefined : json['state'],
        'postalCode': !(0, runtime_1.exists)(json, 'postalCode') ? undefined : json['postalCode'],
        'country': json['country'],
        'bestRepresentation': !(0, runtime_1.exists)(json, 'bestRepresentation') ? undefined : json['bestRepresentation'],
    };
}
exports.CategorizationFromJSONTyped = CategorizationFromJSONTyped;
function CategorizationToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'normalizedPayeeName': value.normalizedPayeeName,
        'category': value.category,
        'city': value.city,
        'state': value.state,
        'postalCode': value.postalCode,
        'country': value.country,
        'bestRepresentation': value.bestRepresentation,
    };
}
exports.CategorizationToJSON = CategorizationToJSON;
//# sourceMappingURL=Categorization.js.map