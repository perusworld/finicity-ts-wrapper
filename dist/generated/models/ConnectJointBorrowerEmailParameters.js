"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectJointBorrowerEmailParametersToJSON = exports.ConnectJointBorrowerEmailParametersFromJSONTyped = exports.ConnectJointBorrowerEmailParametersFromJSON = exports.instanceOfConnectJointBorrowerEmailParameters = void 0;
const runtime_1 = require("../runtime");
const Borrower_1 = require("./Borrower");
const EmailOptions_1 = require("./EmailOptions");
const ReportCustomField_1 = require("./ReportCustomField");
/**
 * Check if a given object implements the ConnectJointBorrowerEmailParameters interface.
 */
function instanceOfConnectJointBorrowerEmailParameters(value) {
    let isInstance = true;
    isInstance = isInstance && "partnerId" in value;
    isInstance = isInstance && "borrowers" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "experience" in value;
    return isInstance;
}
exports.instanceOfConnectJointBorrowerEmailParameters = instanceOfConnectJointBorrowerEmailParameters;
function ConnectJointBorrowerEmailParametersFromJSON(json) {
    return ConnectJointBorrowerEmailParametersFromJSONTyped(json, false);
}
exports.ConnectJointBorrowerEmailParametersFromJSON = ConnectJointBorrowerEmailParametersFromJSON;
function ConnectJointBorrowerEmailParametersFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'language': !(0, runtime_1.exists)(json, 'language') ? undefined : json['language'],
        'partnerId': json['partnerId'],
        'borrowers': (json['borrowers'].map(Borrower_1.BorrowerFromJSON)),
        'redirectUri': !(0, runtime_1.exists)(json, 'redirectUri') ? undefined : json['redirectUri'],
        'webhook': !(0, runtime_1.exists)(json, 'webhook') ? undefined : json['webhook'],
        'webhookContentType': !(0, runtime_1.exists)(json, 'webhookContentType') ? undefined : json['webhookContentType'],
        'webhookData': !(0, runtime_1.exists)(json, 'webhookData') ? undefined : json['webhookData'],
        'webhookHeaders': !(0, runtime_1.exists)(json, 'webhookHeaders') ? undefined : json['webhookHeaders'],
        'institutionSettings': !(0, runtime_1.exists)(json, 'institutionSettings') ? undefined : json['institutionSettings'],
        'email': (0, EmailOptions_1.EmailOptionsFromJSON)(json['email']),
        'experience': json['experience'],
        'fromDate': !(0, runtime_1.exists)(json, 'fromDate') ? undefined : json['fromDate'],
        'reportCustomFields': !(0, runtime_1.exists)(json, 'reportCustomFields') ? undefined : (json['reportCustomFields'].map(ReportCustomField_1.ReportCustomFieldFromJSON)),
        'singleUseUrl': !(0, runtime_1.exists)(json, 'singleUseUrl') ? undefined : json['singleUseUrl'],
    };
}
exports.ConnectJointBorrowerEmailParametersFromJSONTyped = ConnectJointBorrowerEmailParametersFromJSONTyped;
function ConnectJointBorrowerEmailParametersToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'language': value.language,
        'partnerId': value.partnerId,
        'borrowers': (value.borrowers.map(Borrower_1.BorrowerToJSON)),
        'redirectUri': value.redirectUri,
        'webhook': value.webhook,
        'webhookContentType': value.webhookContentType,
        'webhookData': value.webhookData,
        'webhookHeaders': value.webhookHeaders,
        'institutionSettings': value.institutionSettings,
        'email': (0, EmailOptions_1.EmailOptionsToJSON)(value.email),
        'experience': value.experience,
        'fromDate': value.fromDate,
        'reportCustomFields': value.reportCustomFields === undefined ? undefined : (value.reportCustomFields.map(ReportCustomField_1.ReportCustomFieldToJSON)),
        'singleUseUrl': value.singleUseUrl,
    };
}
exports.ConnectJointBorrowerEmailParametersToJSON = ConnectJointBorrowerEmailParametersToJSON;
//# sourceMappingURL=ConnectJointBorrowerEmailParameters.js.map