"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PayStatementForVoieToJSON = exports.PayStatementForVoieFromJSONTyped = exports.PayStatementForVoieFromJSON = exports.instanceOfPayStatementForVoie = void 0;
const runtime_1 = require("../runtime");
const DirectDeposit_1 = require("./DirectDeposit");
const Employee_1 = require("./Employee");
const Employer_1 = require("./Employer");
const PayStat_1 = require("./PayStat");
/**
 * Check if a given object implements the PayStatementForVoie interface.
 */
function instanceOfPayStatementForVoie(value) {
    let isInstance = true;
    isInstance = isInstance && "billable" in value;
    isInstance = isInstance && "assetId" in value;
    isInstance = isInstance && "employer" in value;
    isInstance = isInstance && "employee" in value;
    isInstance = isInstance && "payStat" in value;
    isInstance = isInstance && "institutions" in value;
    return isInstance;
}
exports.instanceOfPayStatementForVoie = instanceOfPayStatementForVoie;
function PayStatementForVoieFromJSON(json) {
    return PayStatementForVoieFromJSONTyped(json, false);
}
exports.PayStatementForVoieFromJSON = PayStatementForVoieFromJSON;
function PayStatementForVoieFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'payPeriod': !(0, runtime_1.exists)(json, 'payPeriod') ? undefined : json['payPeriod'],
        'billable': json['billable'],
        'assetId': json['assetId'],
        'payDate': !(0, runtime_1.exists)(json, 'payDate') ? undefined : json['payDate'],
        'startDate': !(0, runtime_1.exists)(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !(0, runtime_1.exists)(json, 'endDate') ? undefined : json['endDate'],
        'netPayCurrent': !(0, runtime_1.exists)(json, 'netPayCurrent') ? undefined : json['netPayCurrent'],
        'netPayYTD': !(0, runtime_1.exists)(json, 'netPayYTD') ? undefined : json['netPayYTD'],
        'grossPayCurrent': !(0, runtime_1.exists)(json, 'grossPayCurrent') ? undefined : json['grossPayCurrent'],
        'grossPayYTD': !(0, runtime_1.exists)(json, 'grossPayYTD') ? undefined : json['grossPayYTD'],
        'payrollProvider': !(0, runtime_1.exists)(json, 'payrollProvider') ? undefined : json['payrollProvider'],
        'employer': (0, Employer_1.EmployerFromJSON)(json['employer']),
        'employee': (0, Employee_1.EmployeeFromJSON)(json['employee']),
        'payStat': (json['payStat'].map(PayStat_1.PayStatFromJSON)),
        'directDeposits': !(0, runtime_1.exists)(json, 'directDeposits') ? undefined : (json['directDeposits'].map(DirectDeposit_1.DirectDepositFromJSON)),
        'institutions': json['institutions'],
        'errorCode': !(0, runtime_1.exists)(json, 'errorCode') ? undefined : json['errorCode'],
        'errorMessage': !(0, runtime_1.exists)(json, 'errorMessage') ? undefined : json['errorMessage'],
    };
}
exports.PayStatementForVoieFromJSONTyped = PayStatementForVoieFromJSONTyped;
function PayStatementForVoieToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'payPeriod': value.payPeriod,
        'billable': value.billable,
        'assetId': value.assetId,
        'payDate': value.payDate,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'netPayCurrent': value.netPayCurrent,
        'netPayYTD': value.netPayYTD,
        'grossPayCurrent': value.grossPayCurrent,
        'grossPayYTD': value.grossPayYTD,
        'payrollProvider': value.payrollProvider,
        'employer': (0, Employer_1.EmployerToJSON)(value.employer),
        'employee': (0, Employee_1.EmployeeToJSON)(value.employee),
        'payStat': (value.payStat.map(PayStat_1.PayStatToJSON)),
        'directDeposits': value.directDeposits === undefined ? undefined : (value.directDeposits.map(DirectDeposit_1.DirectDepositToJSON)),
        'institutions': value.institutions,
        'errorCode': value.errorCode,
        'errorMessage': value.errorMessage,
    };
}
exports.PayStatementForVoieToJSON = PayStatementForVoieToJSON;
//# sourceMappingURL=PayStatementForVoie.js.map