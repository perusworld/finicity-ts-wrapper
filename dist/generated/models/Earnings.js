"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EarningsToJSON = exports.EarningsFromJSONTyped = exports.EarningsFromJSON = exports.instanceOfEarnings = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the Earnings interface.
 */
function instanceOfEarnings(value) {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "amount" in value;
    return isInstance;
}
exports.instanceOfEarnings = instanceOfEarnings;
function EarningsFromJSON(json) {
    return EarningsFromJSONTyped(json, false);
}
exports.EarningsFromJSON = EarningsFromJSON;
function EarningsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'type': json['type'],
        'rate': !(0, runtime_1.exists)(json, 'rate') ? undefined : json['rate'],
        'amount': json['amount'],
        'amountYTD': !(0, runtime_1.exists)(json, 'amountYTD') ? undefined : json['amountYTD'],
    };
}
exports.EarningsFromJSONTyped = EarningsFromJSONTyped;
function EarningsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'type': value.type,
        'rate': value.rate,
        'amount': value.amount,
        'amountYTD': value.amountYTD,
    };
}
exports.EarningsToJSON = EarningsToJSON;
//# sourceMappingURL=Earnings.js.map