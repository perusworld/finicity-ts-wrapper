"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CashFlowTransactionAnalyticsAttributesToJSON = exports.CashFlowTransactionAnalyticsAttributesFromJSONTyped = exports.CashFlowTransactionAnalyticsAttributesFromJSON = exports.instanceOfCashFlowTransactionAnalyticsAttributes = void 0;
const runtime_1 = require("../runtime");
const CashFlowActivityDepositsCredits_1 = require("./CashFlowActivityDepositsCredits");
const CashFlowActivityWithdrawalsDebits_1 = require("./CashFlowActivityWithdrawalsDebits");
const CashFlowNumWeeksZeros_1 = require("./CashFlowNumWeeksZeros");
const CashFlowTransactionAnalyticsAttributesLastTransactionDateInner_1 = require("./CashFlowTransactionAnalyticsAttributesLastTransactionDateInner");
const ObbDateRangeAndAmount_1 = require("./ObbDateRangeAndAmount");
/**
 * Check if a given object implements the CashFlowTransactionAnalyticsAttributes interface.
 */
function instanceOfCashFlowTransactionAnalyticsAttributes(value) {
    let isInstance = true;
    isInstance = isInstance && "activityDepositsCreditsForTheReportTimePeriod" in value;
    isInstance = isInstance && "activityWithdrawalsDebitsForTheReportTimePeriod" in value;
    isInstance = isInstance && "averageTransactionValueByMonthForTheReportTimePeriod" in value;
    return isInstance;
}
exports.instanceOfCashFlowTransactionAnalyticsAttributes = instanceOfCashFlowTransactionAnalyticsAttributes;
function CashFlowTransactionAnalyticsAttributesFromJSON(json) {
    return CashFlowTransactionAnalyticsAttributesFromJSONTyped(json, false);
}
exports.CashFlowTransactionAnalyticsAttributesFromJSON = CashFlowTransactionAnalyticsAttributesFromJSON;
function CashFlowTransactionAnalyticsAttributesFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'activityDepositsCreditsForTheReportTimePeriod': (json['activityDepositsCreditsForTheReportTimePeriod'].map(CashFlowActivityDepositsCredits_1.CashFlowActivityDepositsCreditsFromJSON)),
        'activityWithdrawalsDebitsForTheReportTimePeriod': (json['activityWithdrawalsDebitsForTheReportTimePeriod'].map(CashFlowActivityWithdrawalsDebits_1.CashFlowActivityWithdrawalsDebitsFromJSON)),
        'averageTransactionValueByMonthForTheReportTimePeriod': (json['averageTransactionValueByMonthForTheReportTimePeriod'].map(ObbDateRangeAndAmount_1.ObbDateRangeAndAmountFromJSON)),
        'historicWeeksWithZeroTransactions': !(0, runtime_1.exists)(json, 'historicWeeksWithZeroTransactions') ? undefined : (0, CashFlowNumWeeksZeros_1.CashFlowNumWeeksZerosFromJSON)(json['historicWeeksWithZeroTransactions']),
        'lastTransactionDate': !(0, runtime_1.exists)(json, 'lastTransactionDate') ? undefined : (json['lastTransactionDate'].map(CashFlowTransactionAnalyticsAttributesLastTransactionDateInner_1.CashFlowTransactionAnalyticsAttributesLastTransactionDateInnerFromJSON)),
        'netCashFlowByMonthForTheReportTimePeriod': !(0, runtime_1.exists)(json, 'netCashFlowByMonthForTheReportTimePeriod') ? undefined : (json['netCashFlowByMonthForTheReportTimePeriod'].map(ObbDateRangeAndAmount_1.ObbDateRangeAndAmountFromJSON)),
        'netCashFlowForTheReportTimePeriod': !(0, runtime_1.exists)(json, 'netCashFlowForTheReportTimePeriod') ? undefined : json['netCashFlowForTheReportTimePeriod'],
    };
}
exports.CashFlowTransactionAnalyticsAttributesFromJSONTyped = CashFlowTransactionAnalyticsAttributesFromJSONTyped;
function CashFlowTransactionAnalyticsAttributesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'activityDepositsCreditsForTheReportTimePeriod': (value.activityDepositsCreditsForTheReportTimePeriod.map(CashFlowActivityDepositsCredits_1.CashFlowActivityDepositsCreditsToJSON)),
        'activityWithdrawalsDebitsForTheReportTimePeriod': (value.activityWithdrawalsDebitsForTheReportTimePeriod.map(CashFlowActivityWithdrawalsDebits_1.CashFlowActivityWithdrawalsDebitsToJSON)),
        'averageTransactionValueByMonthForTheReportTimePeriod': (value.averageTransactionValueByMonthForTheReportTimePeriod.map(ObbDateRangeAndAmount_1.ObbDateRangeAndAmountToJSON)),
        'historicWeeksWithZeroTransactions': (0, CashFlowNumWeeksZeros_1.CashFlowNumWeeksZerosToJSON)(value.historicWeeksWithZeroTransactions),
        'lastTransactionDate': value.lastTransactionDate === undefined ? undefined : (value.lastTransactionDate.map(CashFlowTransactionAnalyticsAttributesLastTransactionDateInner_1.CashFlowTransactionAnalyticsAttributesLastTransactionDateInnerToJSON)),
        'netCashFlowByMonthForTheReportTimePeriod': value.netCashFlowByMonthForTheReportTimePeriod === undefined ? undefined : (value.netCashFlowByMonthForTheReportTimePeriod.map(ObbDateRangeAndAmount_1.ObbDateRangeAndAmountToJSON)),
        'netCashFlowForTheReportTimePeriod': value.netCashFlowForTheReportTimePeriod,
    };
}
exports.CashFlowTransactionAnalyticsAttributesToJSON = CashFlowTransactionAnalyticsAttributesToJSON;
//# sourceMappingURL=CashFlowTransactionAnalyticsAttributes.js.map