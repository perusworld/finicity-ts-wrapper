"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnnualIncomeToJSON = exports.AnnualIncomeFromJSONTyped = exports.AnnualIncomeFromJSON = exports.instanceOfAnnualIncome = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the AnnualIncome interface.
 */
function instanceOfAnnualIncome(value) {
    let isInstance = true;
    isInstance = isInstance && "year" in value;
    isInstance = isInstance && "grossPayAmountYTD" in value;
    return isInstance;
}
exports.instanceOfAnnualIncome = instanceOfAnnualIncome;
function AnnualIncomeFromJSON(json) {
    return AnnualIncomeFromJSONTyped(json, false);
}
exports.AnnualIncomeFromJSON = AnnualIncomeFromJSON;
function AnnualIncomeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'year': json['year'],
        'grossPayAmountYTD': json['grossPayAmountYTD'],
        'netPayAmountYTD': !(0, runtime_1.exists)(json, 'netPayAmountYTD') ? undefined : json['netPayAmountYTD'],
        'basePayAmountYTD': !(0, runtime_1.exists)(json, 'basePayAmountYTD') ? undefined : json['basePayAmountYTD'],
        'overtimePayAmountYTD': !(0, runtime_1.exists)(json, 'overtimePayAmountYTD') ? undefined : json['overtimePayAmountYTD'],
        'otherPayAmountYTD': !(0, runtime_1.exists)(json, 'otherPayAmountYTD') ? undefined : json['otherPayAmountYTD'],
        'commissionPayAmount': !(0, runtime_1.exists)(json, 'commissionPayAmount') ? undefined : json['commissionPayAmount'],
    };
}
exports.AnnualIncomeFromJSONTyped = AnnualIncomeFromJSONTyped;
function AnnualIncomeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'year': value.year,
        'grossPayAmountYTD': value.grossPayAmountYTD,
        'netPayAmountYTD': value.netPayAmountYTD,
        'basePayAmountYTD': value.basePayAmountYTD,
        'overtimePayAmountYTD': value.overtimePayAmountYTD,
        'otherPayAmountYTD': value.otherPayAmountYTD,
        'commissionPayAmount': value.commissionPayAmount,
    };
}
exports.AnnualIncomeToJSON = AnnualIncomeToJSON;
//# sourceMappingURL=AnnualIncome.js.map