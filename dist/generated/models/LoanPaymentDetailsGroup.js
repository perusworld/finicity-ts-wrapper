"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoanPaymentDetailsGroupToJSON = exports.LoanPaymentDetailsGroupFromJSONTyped = exports.LoanPaymentDetailsGroupFromJSON = exports.instanceOfLoanPaymentDetailsGroup = void 0;
const runtime_1 = require("../runtime");
const LoanPaymentDetailsLoan_1 = require("./LoanPaymentDetailsLoan");
/**
 * Check if a given object implements the LoanPaymentDetailsGroup interface.
 */
function instanceOfLoanPaymentDetailsGroup(value) {
    let isInstance = true;
    isInstance = isInstance && "accountId" in value;
    isInstance = isInstance && "groupNumber" in value;
    isInstance = isInstance && "groupPaymentNumber" in value;
    isInstance = isInstance && "groupPaymentAddress" in value;
    isInstance = isInstance && "groupLoanDetail" in value;
    return isInstance;
}
exports.instanceOfLoanPaymentDetailsGroup = instanceOfLoanPaymentDetailsGroup;
function LoanPaymentDetailsGroupFromJSON(json) {
    return LoanPaymentDetailsGroupFromJSONTyped(json, false);
}
exports.LoanPaymentDetailsGroupFromJSON = LoanPaymentDetailsGroupFromJSON;
function LoanPaymentDetailsGroupFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accountId': json['accountId'],
        'groupNumber': json['groupNumber'],
        'groupPaymentNumber': json['groupPaymentNumber'],
        'groupPaymentAddress': json['groupPaymentAddress'],
        'groupFuturePayoffAmount': !(0, runtime_1.exists)(json, 'groupFuturePayoffAmount') ? undefined : json['groupFuturePayoffAmount'],
        'groupFuturePayoffDate': !(0, runtime_1.exists)(json, 'groupFuturePayoffDate') ? undefined : (new Date(json['groupFuturePayoffDate'])),
        'groupLoanDetail': (json['groupLoanDetail'].map(LoanPaymentDetailsLoan_1.LoanPaymentDetailsLoanFromJSON)),
    };
}
exports.LoanPaymentDetailsGroupFromJSONTyped = LoanPaymentDetailsGroupFromJSONTyped;
function LoanPaymentDetailsGroupToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'accountId': value.accountId,
        'groupNumber': value.groupNumber,
        'groupPaymentNumber': value.groupPaymentNumber,
        'groupPaymentAddress': value.groupPaymentAddress,
        'groupFuturePayoffAmount': value.groupFuturePayoffAmount,
        'groupFuturePayoffDate': value.groupFuturePayoffDate === undefined ? undefined : (value.groupFuturePayoffDate.toISOString()),
        'groupLoanDetail': (value.groupLoanDetail.map(LoanPaymentDetailsLoan_1.LoanPaymentDetailsLoanToJSON)),
    };
}
exports.LoanPaymentDetailsGroupToJSON = LoanPaymentDetailsGroupToJSON;
//# sourceMappingURL=LoanPaymentDetailsGroup.js.map