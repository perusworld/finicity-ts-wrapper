"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportTransactionBase1ToJSON = exports.ReportTransactionBase1FromJSONTyped = exports.ReportTransactionBase1FromJSON = exports.instanceOfReportTransactionBase1 = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ReportTransactionBase1 interface.
 */
function instanceOfReportTransactionBase1(value) {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "postedDate" in value;
    isInstance = isInstance && "description" in value;
    return isInstance;
}
exports.instanceOfReportTransactionBase1 = instanceOfReportTransactionBase1;
function ReportTransactionBase1FromJSON(json) {
    return ReportTransactionBase1FromJSONTyped(json, false);
}
exports.ReportTransactionBase1FromJSON = ReportTransactionBase1FromJSON;
function ReportTransactionBase1FromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['id'],
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : json['amount'],
        'postedDate': json['postedDate'],
        'description': json['description'],
        'memo': !(0, runtime_1.exists)(json, 'memo') ? undefined : json['memo'],
    };
}
exports.ReportTransactionBase1FromJSONTyped = ReportTransactionBase1FromJSONTyped;
function ReportTransactionBase1ToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'amount': value.amount,
        'postedDate': value.postedDate,
        'description': value.description,
        'memo': value.memo,
    };
}
exports.ReportTransactionBase1ToJSON = ReportTransactionBase1ToJSON;
//# sourceMappingURL=ReportTransactionBase1.js.map