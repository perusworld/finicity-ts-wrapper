"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportSummaryToJSON = exports.ReportSummaryFromJSONTyped = exports.ReportSummaryFromJSON = exports.instanceOfReportSummary = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ReportSummary interface.
 */
function instanceOfReportSummary(value) {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "requestId" in value;
    isInstance = isInstance && "requesterName" in value;
    isInstance = isInstance && "createdDate" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "status" in value;
    return isInstance;
}
exports.instanceOfReportSummary = instanceOfReportSummary;
function ReportSummaryFromJSON(json) {
    return ReportSummaryFromJSONTyped(json, false);
}
exports.ReportSummaryFromJSON = ReportSummaryFromJSON;
function ReportSummaryFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['id'],
        'requestId': json['requestId'],
        'requesterName': json['requesterName'],
        'createdDate': json['createdDate'],
        'consumerId': !(0, runtime_1.exists)(json, 'consumerId') ? undefined : json['consumerId'],
        'consumerSsn': !(0, runtime_1.exists)(json, 'consumerSsn') ? undefined : json['consumerSsn'],
        'type': json['type'],
        'status': json['status'],
    };
}
exports.ReportSummaryFromJSONTyped = ReportSummaryFromJSONTyped;
function ReportSummaryToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'requestId': value.requestId,
        'requesterName': value.requesterName,
        'createdDate': value.createdDate,
        'consumerId': value.consumerId,
        'consumerSsn': value.consumerSsn,
        'type': value.type,
        'status': value.status,
    };
}
exports.ReportSummaryToJSON = ReportSummaryToJSON;
//# sourceMappingURL=ReportSummary.js.map