"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoanPaymentDetailsAccountToJSON = exports.LoanPaymentDetailsAccountFromJSONTyped = exports.LoanPaymentDetailsAccountFromJSON = exports.instanceOfLoanPaymentDetailsAccount = void 0;
const runtime_1 = require("../runtime");
const LoanPaymentDetailsGroup_1 = require("./LoanPaymentDetailsGroup");
const LoanPaymentDetailsLoan_1 = require("./LoanPaymentDetailsLoan");
/**
 * Check if a given object implements the LoanPaymentDetailsAccount interface.
 */
function instanceOfLoanPaymentDetailsAccount(value) {
    let isInstance = true;
    isInstance = isInstance && "accountId" in value;
    isInstance = isInstance && "accountNumber" in value;
    isInstance = isInstance && "accountPaymentNumber" in value;
    isInstance = isInstance && "accountPaymentAddress" in value;
    return isInstance;
}
exports.instanceOfLoanPaymentDetailsAccount = instanceOfLoanPaymentDetailsAccount;
function LoanPaymentDetailsAccountFromJSON(json) {
    return LoanPaymentDetailsAccountFromJSONTyped(json, false);
}
exports.LoanPaymentDetailsAccountFromJSON = LoanPaymentDetailsAccountFromJSON;
function LoanPaymentDetailsAccountFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accountId': json['accountId'],
        'accountNumber': json['accountNumber'],
        'accountPaymentNumber': json['accountPaymentNumber'],
        'accountPaymentAddress': json['accountPaymentAddress'],
        'accountFuturePayoffAmount': !(0, runtime_1.exists)(json, 'accountFuturePayoffAmount') ? undefined : json['accountFuturePayoffAmount'],
        'accountFuturePayoffDate': !(0, runtime_1.exists)(json, 'accountFuturePayoffDate') ? undefined : (new Date(json['accountFuturePayoffDate'])),
        'groupDetail': !(0, runtime_1.exists)(json, 'groupDetail') ? undefined : (json['groupDetail'].map(LoanPaymentDetailsGroup_1.LoanPaymentDetailsGroupFromJSON)),
        'loanDetail': !(0, runtime_1.exists)(json, 'loanDetail') ? undefined : (json['loanDetail'].map(LoanPaymentDetailsLoan_1.LoanPaymentDetailsLoanFromJSON)),
    };
}
exports.LoanPaymentDetailsAccountFromJSONTyped = LoanPaymentDetailsAccountFromJSONTyped;
function LoanPaymentDetailsAccountToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'accountId': value.accountId,
        'accountNumber': value.accountNumber,
        'accountPaymentNumber': value.accountPaymentNumber,
        'accountPaymentAddress': value.accountPaymentAddress,
        'accountFuturePayoffAmount': value.accountFuturePayoffAmount,
        'accountFuturePayoffDate': value.accountFuturePayoffDate === undefined ? undefined : (value.accountFuturePayoffDate.toISOString()),
        'groupDetail': value.groupDetail === undefined ? undefined : (value.groupDetail.map(LoanPaymentDetailsGroup_1.LoanPaymentDetailsGroupToJSON)),
        'loanDetail': value.loanDetail === undefined ? undefined : (value.loanDetail.map(LoanPaymentDetailsLoan_1.LoanPaymentDetailsLoanToJSON)),
    };
}
exports.LoanPaymentDetailsAccountToJSON = LoanPaymentDetailsAccountToJSON;
//# sourceMappingURL=LoanPaymentDetailsAccount.js.map