"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PayrollEmployeeRecordToJSON = exports.PayrollEmployeeRecordFromJSONTyped = exports.PayrollEmployeeRecordFromJSON = exports.instanceOfPayrollEmployeeRecord = void 0;
const runtime_1 = require("../runtime");
const PayrollEmployeeAddress_1 = require("./PayrollEmployeeAddress");
/**
 * Check if a given object implements the PayrollEmployeeRecord interface.
 */
function instanceOfPayrollEmployeeRecord(value) {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "givenName" in value;
    isInstance = isInstance && "familyName" in value;
    return isInstance;
}
exports.instanceOfPayrollEmployeeRecord = instanceOfPayrollEmployeeRecord;
function PayrollEmployeeRecordFromJSON(json) {
    return PayrollEmployeeRecordFromJSONTyped(json, false);
}
exports.PayrollEmployeeRecordFromJSON = PayrollEmployeeRecordFromJSON;
function PayrollEmployeeRecordFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': json['name'],
        'givenName': json['givenName'],
        'middleName': !(0, runtime_1.exists)(json, 'middleName') ? undefined : json['middleName'],
        'familyName': json['familyName'],
        'address': !(0, runtime_1.exists)(json, 'address') ? undefined : (json['address'].map(PayrollEmployeeAddress_1.PayrollEmployeeAddressFromJSON)),
    };
}
exports.PayrollEmployeeRecordFromJSONTyped = PayrollEmployeeRecordFromJSONTyped;
function PayrollEmployeeRecordToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'name': value.name,
        'givenName': value.givenName,
        'middleName': value.middleName,
        'familyName': value.familyName,
        'address': value.address === undefined ? undefined : (value.address.map(PayrollEmployeeAddress_1.PayrollEmployeeAddressToJSON)),
    };
}
exports.PayrollEmployeeRecordToJSON = PayrollEmployeeRecordToJSON;
//# sourceMappingURL=PayrollEmployeeRecord.js.map