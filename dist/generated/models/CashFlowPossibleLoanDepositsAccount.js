"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CashFlowPossibleLoanDepositsAccountToJSON = exports.CashFlowPossibleLoanDepositsAccountFromJSONTyped = exports.CashFlowPossibleLoanDepositsAccountFromJSON = exports.instanceOfCashFlowPossibleLoanDepositsAccount = void 0;
const ReportTransaction_1 = require("./ReportTransaction");
/**
 * Check if a given object implements the CashFlowPossibleLoanDepositsAccount interface.
 */
function instanceOfCashFlowPossibleLoanDepositsAccount(value) {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "ownerName" in value;
    isInstance = isInstance && "ownerAddress" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "number" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "aggregationStatusCode" in value;
    isInstance = isInstance && "currentBalance" in value;
    isInstance = isInstance && "availableBalance" in value;
    isInstance = isInstance && "balanceDate" in value;
    isInstance = isInstance && "transactions" in value;
    return isInstance;
}
exports.instanceOfCashFlowPossibleLoanDepositsAccount = instanceOfCashFlowPossibleLoanDepositsAccount;
function CashFlowPossibleLoanDepositsAccountFromJSON(json) {
    return CashFlowPossibleLoanDepositsAccountFromJSONTyped(json, false);
}
exports.CashFlowPossibleLoanDepositsAccountFromJSON = CashFlowPossibleLoanDepositsAccountFromJSON;
function CashFlowPossibleLoanDepositsAccountFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['id'],
        'ownerName': json['ownerName'],
        'ownerAddress': json['ownerAddress'],
        'name': json['name'],
        'number': json['number'],
        'type': json['type'],
        'aggregationStatusCode': json['aggregationStatusCode'],
        'currentBalance': json['currentBalance'],
        'availableBalance': json['availableBalance'],
        'balanceDate': json['balanceDate'],
        'transactions': (json['transactions'].map(ReportTransaction_1.ReportTransactionFromJSON)),
    };
}
exports.CashFlowPossibleLoanDepositsAccountFromJSONTyped = CashFlowPossibleLoanDepositsAccountFromJSONTyped;
function CashFlowPossibleLoanDepositsAccountToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'ownerName': value.ownerName,
        'ownerAddress': value.ownerAddress,
        'name': value.name,
        'number': value.number,
        'type': value.type,
        'aggregationStatusCode': value.aggregationStatusCode,
        'currentBalance': value.currentBalance,
        'availableBalance': value.availableBalance,
        'balanceDate': value.balanceDate,
        'transactions': (value.transactions.map(ReportTransaction_1.ReportTransactionToJSON)),
    };
}
exports.CashFlowPossibleLoanDepositsAccountToJSON = CashFlowPossibleLoanDepositsAccountToJSON;
//# sourceMappingURL=CashFlowPossibleLoanDepositsAccount.js.map