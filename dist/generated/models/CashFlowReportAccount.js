"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CashFlowReportAccountToJSON = exports.CashFlowReportAccountFromJSONTyped = exports.CashFlowReportAccountFromJSON = exports.instanceOfCashFlowReportAccount = void 0;
const runtime_1 = require("../runtime");
const CashFlowCashFlowBalance_1 = require("./CashFlowCashFlowBalance");
const CashFlowCashFlowCharacteristic_1 = require("./CashFlowCashFlowCharacteristic");
const CashFlowCashFlowCredit_1 = require("./CashFlowCashFlowCredit");
const CashFlowCashFlowDebit_1 = require("./CashFlowCashFlowDebit");
const ReportTransaction_1 = require("./ReportTransaction");
/**
 * Check if a given object implements the CashFlowReportAccount interface.
 */
function instanceOfCashFlowReportAccount(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfCashFlowReportAccount = instanceOfCashFlowReportAccount;
function CashFlowReportAccountFromJSON(json) {
    return CashFlowReportAccountFromJSONTyped(json, false);
}
exports.CashFlowReportAccountFromJSON = CashFlowReportAccountFromJSON;
function CashFlowReportAccountFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'ownerName': !(0, runtime_1.exists)(json, 'ownerName') ? undefined : json['ownerName'],
        'ownerAddress': !(0, runtime_1.exists)(json, 'ownerAddress') ? undefined : json['ownerAddress'],
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : json['name'],
        'number': !(0, runtime_1.exists)(json, 'number') ? undefined : json['number'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
        'aggregationStatusCode': !(0, runtime_1.exists)(json, 'aggregationStatusCode') ? undefined : json['aggregationStatusCode'],
        'currentBalance': !(0, runtime_1.exists)(json, 'currentBalance') ? undefined : json['currentBalance'],
        'availableBalance': !(0, runtime_1.exists)(json, 'availableBalance') ? undefined : json['availableBalance'],
        'balanceDate': !(0, runtime_1.exists)(json, 'balanceDate') ? undefined : json['balanceDate'],
        'transactions': !(0, runtime_1.exists)(json, 'transactions') ? undefined : (json['transactions'].map(ReportTransaction_1.ReportTransactionFromJSON)),
        'cashFlowBalance': !(0, runtime_1.exists)(json, 'cashFlowBalance') ? undefined : (0, CashFlowCashFlowBalance_1.CashFlowCashFlowBalanceFromJSON)(json['cashFlowBalance']),
        'cashFlowCredit': !(0, runtime_1.exists)(json, 'cashFlowCredit') ? undefined : (0, CashFlowCashFlowCredit_1.CashFlowCashFlowCreditFromJSON)(json['cashFlowCredit']),
        'cashFlowDebit': !(0, runtime_1.exists)(json, 'cashFlowDebit') ? undefined : (0, CashFlowCashFlowDebit_1.CashFlowCashFlowDebitFromJSON)(json['cashFlowDebit']),
        'cashFlowCharacteristic': !(0, runtime_1.exists)(json, 'cashFlowCharacteristic') ? undefined : (0, CashFlowCashFlowCharacteristic_1.CashFlowCashFlowCharacteristicFromJSON)(json['cashFlowCharacteristic']),
    };
}
exports.CashFlowReportAccountFromJSONTyped = CashFlowReportAccountFromJSONTyped;
function CashFlowReportAccountToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'ownerName': value.ownerName,
        'ownerAddress': value.ownerAddress,
        'name': value.name,
        'number': value.number,
        'type': value.type,
        'aggregationStatusCode': value.aggregationStatusCode,
        'currentBalance': value.currentBalance,
        'availableBalance': value.availableBalance,
        'balanceDate': value.balanceDate,
        'transactions': value.transactions === undefined ? undefined : (value.transactions.map(ReportTransaction_1.ReportTransactionToJSON)),
        'cashFlowBalance': (0, CashFlowCashFlowBalance_1.CashFlowCashFlowBalanceToJSON)(value.cashFlowBalance),
        'cashFlowCredit': (0, CashFlowCashFlowCredit_1.CashFlowCashFlowCreditToJSON)(value.cashFlowCredit),
        'cashFlowDebit': (0, CashFlowCashFlowDebit_1.CashFlowCashFlowDebitToJSON)(value.cashFlowDebit),
        'cashFlowCharacteristic': (0, CashFlowCashFlowCharacteristic_1.CashFlowCashFlowCharacteristicToJSON)(value.cashFlowCharacteristic),
    };
}
exports.CashFlowReportAccountToJSON = CashFlowReportAccountToJSON;
//# sourceMappingURL=CashFlowReportAccount.js.map