"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportTransactionNewTxBasedToJSON = exports.ReportTransactionNewTxBasedFromJSONTyped = exports.ReportTransactionNewTxBasedFromJSON = exports.instanceOfReportTransactionNewTxBased = void 0;
const runtime_1 = require("../runtime");
/**
 * Check if a given object implements the ReportTransactionNewTxBased interface.
 */
function instanceOfReportTransactionNewTxBased(value) {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "postedDate" in value;
    isInstance = isInstance && "description" in value;
    return isInstance;
}
exports.instanceOfReportTransactionNewTxBased = instanceOfReportTransactionNewTxBased;
function ReportTransactionNewTxBasedFromJSON(json) {
    return ReportTransactionNewTxBasedFromJSONTyped(json, false);
}
exports.ReportTransactionNewTxBasedFromJSON = ReportTransactionNewTxBasedFromJSON;
function ReportTransactionNewTxBasedFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['id'],
        'amount': !(0, runtime_1.exists)(json, 'amount') ? undefined : json['amount'],
        'postedDate': json['postedDate'],
        'description': json['description'],
        'memo': !(0, runtime_1.exists)(json, 'memo') ? undefined : json['memo'],
        'normalizedPayee': !(0, runtime_1.exists)(json, 'normalizedPayee') ? undefined : json['normalizedPayee'],
        'institutionTransactionId': !(0, runtime_1.exists)(json, 'institutionTransactionId') ? undefined : json['institutionTransactionId'],
        'category': !(0, runtime_1.exists)(json, 'category') ? undefined : json['category'],
        'type': !(0, runtime_1.exists)(json, 'type') ? undefined : json['type'],
        'securityType': !(0, runtime_1.exists)(json, 'securityType') ? undefined : json['securityType'],
        'symbol': !(0, runtime_1.exists)(json, 'symbol') ? undefined : json['symbol'],
        'commission': !(0, runtime_1.exists)(json, 'commission') ? undefined : json['commission'],
        'investmentTransactionType': !(0, runtime_1.exists)(json, 'investmentTransactionType') ? undefined : json['investmentTransactionType'],
    };
}
exports.ReportTransactionNewTxBasedFromJSONTyped = ReportTransactionNewTxBasedFromJSONTyped;
function ReportTransactionNewTxBasedToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'amount': value.amount,
        'postedDate': value.postedDate,
        'description': value.description,
        'memo': value.memo,
        'normalizedPayee': value.normalizedPayee,
        'institutionTransactionId': value.institutionTransactionId,
        'category': value.category,
        'type': value.type,
        'securityType': value.securityType,
        'symbol': value.symbol,
        'commission': value.commission,
        'investmentTransactionType': value.investmentTransactionType,
    };
}
exports.ReportTransactionNewTxBasedToJSON = ReportTransactionNewTxBasedToJSON;
//# sourceMappingURL=ReportTransactionNewTxBased.js.map