"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionsToJSON = exports.TransactionsFromJSONTyped = exports.TransactionsFromJSON = exports.instanceOfTransactions = void 0;
const Transaction_1 = require("./Transaction");
/**
 * Check if a given object implements the Transactions interface.
 */
function instanceOfTransactions(value) {
    let isInstance = true;
    isInstance = isInstance && "found" in value;
    isInstance = isInstance && "displaying" in value;
    isInstance = isInstance && "moreAvailable" in value;
    isInstance = isInstance && "fromDate" in value;
    isInstance = isInstance && "toDate" in value;
    isInstance = isInstance && "sort" in value;
    isInstance = isInstance && "transactions" in value;
    return isInstance;
}
exports.instanceOfTransactions = instanceOfTransactions;
function TransactionsFromJSON(json) {
    return TransactionsFromJSONTyped(json, false);
}
exports.TransactionsFromJSON = TransactionsFromJSON;
function TransactionsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'found': json['found'],
        'displaying': json['displaying'],
        'moreAvailable': json['moreAvailable'],
        'fromDate': json['fromDate'],
        'toDate': json['toDate'],
        'sort': json['sort'],
        'transactions': (json['transactions'].map(Transaction_1.TransactionFromJSON)),
    };
}
exports.TransactionsFromJSONTyped = TransactionsFromJSONTyped;
function TransactionsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'found': value.found,
        'displaying': value.displaying,
        'moreAvailable': value.moreAvailable,
        'fromDate': value.fromDate,
        'toDate': value.toDate,
        'sort': value.sort,
        'transactions': (value.transactions.map(Transaction_1.TransactionToJSON)),
    };
}
exports.TransactionsToJSON = TransactionsToJSON;
//# sourceMappingURL=Transactions.js.map