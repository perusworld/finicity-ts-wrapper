"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConsumersApi = void 0;
const runtime = require("../runtime");
const index_1 = require("../models/index");
/**
 *
 */
class ConsumersApi extends runtime.BaseAPI {
    /**
     * Create a consumer record associated with the given customer. A consumer persists as the owner of any reports that are generated, even after the original customer is deleted from the system.  A consumer must be created for the given customer before calling any of the Generate Report services.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Create Consumer
     */
    createConsumerRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.customerId === null || requestParameters.customerId === undefined) {
                throw new runtime.RequiredError('customerId', 'Required parameter requestParameters.customerId was null or undefined when calling createConsumer.');
            }
            if (requestParameters.newConsumer === null || requestParameters.newConsumer === undefined) {
                throw new runtime.RequiredError('newConsumer', 'Required parameter requestParameters.newConsumer was null or undefined when calling createConsumer.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
            }
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
            }
            const response = yield this.request({
                path: `/decisioning/v1/customers/{customerId}/consumer`.replace(`{${"customerId"}}`, encodeURIComponent(String(requestParameters.customerId))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.NewConsumerToJSON)(requestParameters.newConsumer),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.CreatedConsumerFromJSON)(jsonValue));
        });
    }
    /**
     * Create a consumer record associated with the given customer. A consumer persists as the owner of any reports that are generated, even after the original customer is deleted from the system.  A consumer must be created for the given customer before calling any of the Generate Report services.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Create Consumer
     */
    createConsumer(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.createConsumerRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get the details of a consumer record by consumer ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Consumer by ID
     */
    getConsumerRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.consumerId === null || requestParameters.consumerId === undefined) {
                throw new runtime.RequiredError('consumerId', 'Required parameter requestParameters.consumerId was null or undefined when calling getConsumer.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
            }
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
            }
            const response = yield this.request({
                path: `/decisioning/v1/consumers/{consumerId}`.replace(`{${"consumerId"}}`, encodeURIComponent(String(requestParameters.consumerId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.ConsumerFromJSON)(jsonValue));
        });
    }
    /**
     * Get the details of a consumer record by consumer ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Consumer by ID
     */
    getConsumer(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getConsumerRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get the details of a consumer record by customer ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Consumer For Customer
     */
    getConsumerForCustomerRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.customerId === null || requestParameters.customerId === undefined) {
                throw new runtime.RequiredError('customerId', 'Required parameter requestParameters.customerId was null or undefined when calling getConsumerForCustomer.');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
            }
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
            }
            const response = yield this.request({
                path: `/decisioning/v1/customers/{customerId}/consumer`.replace(`{${"customerId"}}`, encodeURIComponent(String(requestParameters.customerId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.ConsumerFromJSON)(jsonValue));
        });
    }
    /**
     * Get the details of a consumer record by customer ID.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Consumer For Customer
     */
    getConsumerForCustomer(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getConsumerForCustomerRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Modify an existing consumer. All fields are required for a consumer record, but individual fields for this call are optional because fields that are not specified will be left unchanged.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Modify Consumer by ID
     */
    modifyConsumerRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.consumerId === null || requestParameters.consumerId === undefined) {
                throw new runtime.RequiredError('consumerId', 'Required parameter requestParameters.consumerId was null or undefined when calling modifyConsumer.');
            }
            if (requestParameters.consumerUpdate === null || requestParameters.consumerUpdate === undefined) {
                throw new runtime.RequiredError('consumerUpdate', 'Required parameter requestParameters.consumerUpdate was null or undefined when calling modifyConsumer.');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
            }
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
            }
            const response = yield this.request({
                path: `/decisioning/v1/consumers/{consumerId}`.replace(`{${"consumerId"}}`, encodeURIComponent(String(requestParameters.consumerId))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.ConsumerUpdateToJSON)(requestParameters.consumerUpdate),
            }, initOverrides);
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * Modify an existing consumer. All fields are required for a consumer record, but individual fields for this call are optional because fields that are not specified will be left unchanged.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Modify Consumer by ID
     */
    modifyConsumer(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.modifyConsumerRaw(requestParameters, initOverrides);
        });
    }
}
exports.ConsumersApi = ConsumersApi;
//# sourceMappingURL=ConsumersApi.js.map