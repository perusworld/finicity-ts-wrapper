/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { InitiatedMicroDeposit, MicroDepositDetails, MicroDepositInitiation, MicroDepositVerification, VerifiedMicroDeposit } from '../models/index';
export interface GetMicroDepositsDetailsRequest {
    customerId: string;
    accountId: string;
}
export interface InitiateMicroAmountDepositsRequest {
    customerId: string;
    microDepositInitiation: MicroDepositInitiation;
}
export interface VerifyMicroAmountDepositsRequest {
    customerId: string;
    accountId: string;
    microDepositVerification: MicroDepositVerification;
}
/**
 *
 */
export declare class AccountValidationAssistanceApi extends runtime.BaseAPI {
    /**
     * Fetch the micro entries details. `customerId` and `accountId` are the identifiers of the customer and account receiving the micro entries.    _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Micro Entries Details
     */
    getMicroDepositsDetailsRaw(requestParameters: GetMicroDepositsDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<MicroDepositDetails>>;
    /**
     * Fetch the micro entries details. `customerId` and `accountId` are the identifiers of the customer and account receiving the micro entries.    _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Micro Entries Details
     */
    getMicroDepositsDetails(requestParameters: GetMicroDepositsDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<MicroDepositDetails>;
    /**
     * Initiate the micro entries to customer\'s account.  Two random micro amounts less than a dollar each will be deposited to provided customer\'s account.    _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Initiate Micro Entries
     */
    initiateMicroAmountDepositsRaw(requestParameters: InitiateMicroAmountDepositsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<InitiatedMicroDeposit>>;
    /**
     * Initiate the micro entries to customer\'s account.  Two random micro amounts less than a dollar each will be deposited to provided customer\'s account.    _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Initiate Micro Entries
     */
    initiateMicroAmountDeposits(requestParameters: InitiateMicroAmountDepositsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<InitiatedMicroDeposit>;
    /**
     * Verify the micro entries as received by customer in customer\'s account. Customer needs to verify the micro amounts received in customer\'s account. `customerId` and `accountId` are the identifiers of the customer and account  receiving the micro entries.    _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Verify Micro Entries
     */
    verifyMicroAmountDepositsRaw(requestParameters: VerifyMicroAmountDepositsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<VerifiedMicroDeposit>>;
    /**
     * Verify the micro entries as received by customer in customer\'s account. Customer needs to verify the micro amounts received in customer\'s account. `customerId` and `accountId` are the identifiers of the customer and account  receiving the micro entries.    _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Verify Micro Entries
     */
    verifyMicroAmountDeposits(requestParameters: VerifyMicroAmountDepositsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<VerifiedMicroDeposit>;
}
