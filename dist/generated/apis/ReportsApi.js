"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Open Banking
 * OpenAPI specification for Finicity APIs.  Open Banking solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.13.9
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportsApi = void 0;
const runtime = require("../runtime");
const index_1 = require("../models/index");
/**
 *
 */
class ReportsApi extends runtime.BaseAPI {
    /**
     * Get a report that has been generated by a previous call to one of the Generate Report services.  The report\'s `status` field contains \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Report by Consumer and ID
     */
    getReportByConsumerRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.consumerId === null || requestParameters.consumerId === undefined) {
                throw new runtime.RequiredError('consumerId', 'Required parameter requestParameters.consumerId was null or undefined when calling getReportByConsumer.');
            }
            if (requestParameters.reportId === null || requestParameters.reportId === undefined) {
                throw new runtime.RequiredError('reportId', 'Required parameter requestParameters.reportId was null or undefined when calling getReportByConsumer.');
            }
            const queryParameters = {};
            if (requestParameters.purpose !== undefined) {
                queryParameters['purpose'] = requestParameters.purpose;
            }
            if (requestParameters.onBehalfOf !== undefined) {
                queryParameters['onBehalfOf'] = requestParameters.onBehalfOf;
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
            }
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
            }
            const response = yield this.request({
                path: `/decisioning/v3/consumers/{consumerId}/reports/{reportId}`.replace(`{${"consumerId"}}`, encodeURIComponent(String(requestParameters.consumerId))).replace(`{${"reportId"}}`, encodeURIComponent(String(requestParameters.reportId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.ReportFromJSON)(jsonValue));
        });
    }
    /**
     * Get a report that has been generated by a previous call to one of the Generate Report services.  The report\'s `status` field contains \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Report by Consumer and ID
     */
    getReportByConsumer(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getReportByConsumerRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get a report that has been generated by a previous call to one of the Generate Report services.  The report\'s `status` field contains \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Report by Customer and ID
     */
    getReportByCustomerRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.customerId === null || requestParameters.customerId === undefined) {
                throw new runtime.RequiredError('customerId', 'Required parameter requestParameters.customerId was null or undefined when calling getReportByCustomer.');
            }
            if (requestParameters.reportId === null || requestParameters.reportId === undefined) {
                throw new runtime.RequiredError('reportId', 'Required parameter requestParameters.reportId was null or undefined when calling getReportByCustomer.');
            }
            const queryParameters = {};
            if (requestParameters.onBehalfOf !== undefined) {
                queryParameters['onBehalfOf'] = requestParameters.onBehalfOf;
            }
            if (requestParameters.purpose !== undefined) {
                queryParameters['purpose'] = requestParameters.purpose;
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
            }
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
            }
            const response = yield this.request({
                path: `/decisioning/v3/customers/{customerId}/reports/{reportId}`.replace(`{${"customerId"}}`, encodeURIComponent(String(requestParameters.customerId))).replace(`{${"reportId"}}`, encodeURIComponent(String(requestParameters.reportId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.ReportFromJSON)(jsonValue));
        });
    }
    /**
     * Get a report that has been generated by a previous call to one of the Generate Report services.  The report\'s `status` field contains \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Report by Customer and ID
     */
    getReportByCustomer(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getReportByCustomerRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get all reports that have been generated by previous calls to Generate Report services for the given consumer.  The `status` fields in the returned list contain \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Reports by Consumer ID
     */
    getReportsByConsumerIdRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.consumerId === null || requestParameters.consumerId === undefined) {
                throw new runtime.RequiredError('consumerId', 'Required parameter requestParameters.consumerId was null or undefined when calling getReportsByConsumerId.');
            }
            const queryParameters = {};
            if (requestParameters.purpose !== undefined) {
                queryParameters['purpose'] = requestParameters.purpose;
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
            }
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
            }
            const response = yield this.request({
                path: `/decisioning/v1/consumers/{consumerId}/reports`.replace(`{${"consumerId"}}`, encodeURIComponent(String(requestParameters.consumerId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.ReportSummariesFromJSON)(jsonValue));
        });
    }
    /**
     * Get all reports that have been generated by previous calls to Generate Report services for the given consumer.  The `status` fields in the returned list contain \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Reports by Consumer ID
     */
    getReportsByConsumerId(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getReportsByConsumerIdRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get all reports that have been generated by previous calls to Generate Report services for the given customer.  The `status` fields in the returned list contain \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Reports by Customer ID
     */
    getReportsByCustomerIdRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters.customerId === null || requestParameters.customerId === undefined) {
                throw new runtime.RequiredError('customerId', 'Required parameter requestParameters.customerId was null or undefined when calling getReportsByCustomerId.');
            }
            const queryParameters = {};
            if (requestParameters.purpose !== undefined) {
                queryParameters['purpose'] = requestParameters.purpose;
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Token"] = this.configuration.apiKey("Finicity-App-Token"); // FinicityAppToken authentication
            }
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Finicity-App-Key"] = this.configuration.apiKey("Finicity-App-Key"); // FinicityAppKey authentication
            }
            const response = yield this.request({
                path: `/decisioning/v1/customers/{customerId}/reports`.replace(`{${"customerId"}}`, encodeURIComponent(String(requestParameters.customerId))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.ReportSummariesFromJSON)(jsonValue));
        });
    }
    /**
     * Get all reports that have been generated by previous calls to Generate Report services for the given customer.  The `status` fields in the returned list contain \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.  _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     * Get Reports by Customer ID
     */
    getReportsByCustomerId(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getReportsByCustomerIdRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}
exports.ReportsApi = ReportsApi;
//# sourceMappingURL=ReportsApi.js.map